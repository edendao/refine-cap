// Generated by @wagmi/cli@0.1.2 on 3/30/2023 at 4:40:34 AM
import { getContract, readContract, writeContract, prepareWriteContract, watchContractEvent, } from "wagmi/actions";
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ACLAuthority
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const aclAuthorityABI = [
    { type: "error", inputs: [], name: "ACLAuthority__NotAuthorized" },
    { type: "error", inputs: [], name: "Initializable__AlreadyInitialized" },
    { type: "error", inputs: [], name: "Ownable__NotOwner" },
    { type: "error", inputs: [], name: "Ownable__NotTransitiveOwner" },
    { type: "error", inputs: [], name: "SafeOwnable__NotNomineeOwner" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "previousOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "newOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "OwnershipTransferred",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "sig", internalType: "bytes4", type: "bytes4", indexed: true },
            { name: "enabled", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "PublicCapabilityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "role", internalType: "uint8", type: "uint8", indexed: true },
            { name: "sig", internalType: "bytes4", type: "bytes4", indexed: true },
            { name: "enabled", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "RoleCapabilityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "target",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "authority",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "TargetAuthorityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "user", internalType: "address", type: "address", indexed: true },
            { name: "role", internalType: "uint8", type: "uint8", indexed: true },
            { name: "enabled", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "UserRoleUpdated",
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "user", internalType: "address", type: "address" },
            { name: "target", internalType: "address", type: "address" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "canCall",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "role", internalType: "uint8", type: "uint8" },
            { name: "sig", internalType: "bytes4", type: "bytes4" },
        ],
        name: "doesRoleHaveCapability",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "user", internalType: "address", type: "address" },
            { name: "role", internalType: "uint8", type: "uint8" },
        ],
        name: "doesUserHaveRole",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "selector", internalType: "bytes4", type: "bytes4" }],
        name: "getFunctionRoles",
        outputs: [{ name: "roles", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "target", internalType: "address", type: "address" }],
        name: "getTargetAuthority",
        outputs: [
            { name: "", internalType: "contract IAuthority", type: "address" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "getUserRoles",
        outputs: [{ name: "roles", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "selector", internalType: "bytes4", type: "bytes4" }],
        name: "isPublicCapability",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "data", internalType: "bytes[]", type: "bytes[]" }],
        name: "multicall",
        outputs: [{ name: "", internalType: "bytes[]", type: "bytes[]" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "nomineeOwner",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "owner",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
        name: "setOwner",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "sig", internalType: "bytes4", type: "bytes4" },
            { name: "enabled", internalType: "bool", type: "bool" },
        ],
        name: "setPublicCapability",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "role", internalType: "uint8", type: "uint8" },
            { name: "sig", internalType: "bytes4", type: "bytes4" },
            { name: "enabled", internalType: "bool", type: "bool" },
        ],
        name: "setRoleCapability",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "target", internalType: "address", type: "address" },
            {
                name: "customAuthority",
                internalType: "contract IAuthority",
                type: "address",
            },
        ],
        name: "setTargetAuthority",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "user", internalType: "address", type: "address" },
            { name: "role", internalType: "uint8", type: "uint8" },
            { name: "enabled", internalType: "bool", type: "bool" },
        ],
        name: "setUserRole",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "transferOwnership",
        outputs: [],
    },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IFactory
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const iFactoryABI = [
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "implementation",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "proxy",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "Deployed",
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "implementation", internalType: "address", type: "address" },
            { name: "initializer", internalType: "bytes", type: "bytes" },
        ],
        name: "deploy",
        outputs: [{ name: "proxy", internalType: "address", type: "address" }],
    },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Methodologies
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export const methodologiesABI = [
    { type: "error", inputs: [], name: "BalanceMap__AddressNotFound" },
    { type: "error", inputs: [], name: "CAP721__InvalidURI" },
    { type: "error", inputs: [], name: "CAP721__MintLimit" },
    { type: "error", inputs: [], name: "ERC165Base__InvalidInterfaceId" },
    { type: "error", inputs: [], name: "ERC721Base__BalanceQueryZeroAddress" },
    {
        type: "error",
        inputs: [],
        name: "ERC721Base__ERC721ReceiverNotImplemented",
    },
    { type: "error", inputs: [], name: "ERC721Base__InvalidOwner" },
    { type: "error", inputs: [], name: "ERC721Base__MintToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Base__NonExistentToken" },
    { type: "error", inputs: [], name: "ERC721Base__NotOwnerOrApproved" },
    { type: "error", inputs: [], name: "ERC721Base__NotTokenOwner" },
    { type: "error", inputs: [], name: "ERC721Base__SelfApproval" },
    { type: "error", inputs: [], name: "ERC721Base__TokenAlreadyMinted" },
    { type: "error", inputs: [], name: "ERC721Base__TransferToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Metadata__NonExistentToken" },
    { type: "error", inputs: [], name: "Initializable__AlreadyInitialized" },
    { type: "error", inputs: [], name: "Values__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "Values__InsufficientValue" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Approval",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "approved", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "ApprovalForAll",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "MetadataUpdate",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Transfer",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "value", internalType: "string", type: "string", indexed: false },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "URI",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "selector",
                internalType: "bytes4",
                type: "bytes4",
                indexed: true,
            },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "ValueSet",
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "approve",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "balanceOf",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getApproved",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "idRange",
        outputs: [
            { name: "", internalType: "uint64", type: "uint64" },
            { name: "", internalType: "uint64", type: "uint64" },
        ],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "idOffset", internalType: "uint64", type: "uint64" },
            { name: "idLimit", internalType: "uint64", type: "uint64" },
        ],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "operator", internalType: "address", type: "address" },
        ],
        name: "isApprovedForAll",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "uri", internalType: "string", type: "string" }],
        name: "mint",
        outputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "name",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "ownerOf",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "approved", internalType: "bool", type: "bool" },
        ],
        name: "setApprovalForAll",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "uri", internalType: "string", type: "string" },
        ],
        name: "setTokenURI",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
        name: "supportsInterface",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "symbol",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "tokenURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFrom",
        outputs: [],
    },
];
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export const methodologiesAddress = {
    5: "0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F",
    137: "0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc",
};
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export const methodologiesConfig = {
    address: methodologiesAddress,
    abi: methodologiesABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Regenerators
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export const regeneratorsABI = [
    { type: "error", inputs: [], name: "BalanceMap__AddressNotFound" },
    { type: "error", inputs: [], name: "CAP721__InvalidURI" },
    { type: "error", inputs: [], name: "CAP721__MintLimit" },
    { type: "error", inputs: [], name: "ERC165Base__InvalidInterfaceId" },
    { type: "error", inputs: [], name: "ERC721Base__BalanceQueryZeroAddress" },
    {
        type: "error",
        inputs: [],
        name: "ERC721Base__ERC721ReceiverNotImplemented",
    },
    { type: "error", inputs: [], name: "ERC721Base__InvalidOwner" },
    { type: "error", inputs: [], name: "ERC721Base__MintToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Base__NonExistentToken" },
    { type: "error", inputs: [], name: "ERC721Base__NotOwnerOrApproved" },
    { type: "error", inputs: [], name: "ERC721Base__NotTokenOwner" },
    { type: "error", inputs: [], name: "ERC721Base__SelfApproval" },
    { type: "error", inputs: [], name: "ERC721Base__TokenAlreadyMinted" },
    { type: "error", inputs: [], name: "ERC721Base__TransferToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Metadata__NonExistentToken" },
    { type: "error", inputs: [], name: "Initializable__AlreadyInitialized" },
    { type: "error", inputs: [], name: "Values__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "Values__InsufficientValue" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Approval",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "approved", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "ApprovalForAll",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "MetadataUpdate",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Transfer",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "value", internalType: "string", type: "string", indexed: false },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "URI",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "selector",
                internalType: "bytes4",
                type: "bytes4",
                indexed: true,
            },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "ValueSet",
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "approve",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "balanceOf",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getApproved",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "idRange",
        outputs: [
            { name: "", internalType: "uint64", type: "uint64" },
            { name: "", internalType: "uint64", type: "uint64" },
        ],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "idOffset", internalType: "uint64", type: "uint64" },
            { name: "idLimit", internalType: "uint64", type: "uint64" },
        ],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "operator", internalType: "address", type: "address" },
        ],
        name: "isApprovedForAll",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "uri", internalType: "string", type: "string" }],
        name: "mint",
        outputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "name",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "ownerOf",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "approved", internalType: "bool", type: "bool" },
        ],
        name: "setApprovalForAll",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "uri", internalType: "string", type: "string" },
        ],
        name: "setTokenURI",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
        name: "supportsInterface",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "symbol",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "tokenURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFrom",
        outputs: [],
    },
];
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export const regeneratorsAddress = {
    5: "0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7",
    137: "0x590F3BDA0842294305e3ef77d9c276fBeb4c150E",
};
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export const regeneratorsConfig = {
    address: regeneratorsAddress,
    abi: regeneratorsABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CAP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export const capABI = [
    { type: "error", inputs: [], name: "Accreditations__InvalidAttestation" },
    { type: "error", inputs: [], name: "Accreditations__InvalidClaim" },
    { type: "error", inputs: [], name: "Accreditations__InvalidCredit" },
    { type: "error", inputs: [], name: "Accreditations__InvalidDataHash" },
    { type: "error", inputs: [], name: "Accreditations__InvalidMethodology" },
    { type: "error", inputs: [], name: "Accreditations__InvalidSigner" },
    { type: "error", inputs: [], name: "AttestationLib__InvalidSigner" },
    { type: "error", inputs: [], name: "AttestationLib__InvalidTimestamps" },
    { type: "error", inputs: [], name: "AttestationLib__InvalidURI" },
    { type: "error", inputs: [], name: "Authorize__NotAuthorized" },
    { type: "error", inputs: [], name: "Authorize__NotTokenOwner" },
    { type: "error", inputs: [], name: "ERC1155Base__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "ERC1155Base__BalanceQueryZeroAddress" },
    { type: "error", inputs: [], name: "ERC1155Base__BurnExceedsBalance" },
    { type: "error", inputs: [], name: "ERC1155Base__BurnFromZeroAddress" },
    {
        type: "error",
        inputs: [],
        name: "ERC1155Base__ERC1155ReceiverNotImplemented",
    },
    { type: "error", inputs: [], name: "ERC1155Base__ERC1155ReceiverRejected" },
    { type: "error", inputs: [], name: "ERC1155Base__MintToZeroAddress" },
    { type: "error", inputs: [], name: "ERC1155Base__NotOwnerOrApproved" },
    {
        type: "error",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "ERC1155Base__NotTransferrable",
    },
    { type: "error", inputs: [], name: "ERC1155Base__SelfApproval" },
    { type: "error", inputs: [], name: "ERC1155Base__TransferExceedsBalance" },
    { type: "error", inputs: [], name: "ERC1155Base__TransferToZeroAddress" },
    { type: "error", inputs: [], name: "Signatures__InvalidNonce" },
    { type: "error", inputs: [], name: "Signatures__NotAuthorized" },
    { type: "error", inputs: [], name: "Values__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "Values__InsufficientValue" },
    { type: "error", inputs: [], name: "Claims__InvalidAttestation" },
    { type: "error", inputs: [], name: "Claims__InvalidDataHash" },
    { type: "error", inputs: [], name: "Claims__InvalidRegenerator" },
    { type: "error", inputs: [], name: "Claims__InvalidSigner" },
    { type: "error", inputs: [], name: "Auth__NotAuthorized" },
    { type: "error", inputs: [], name: "BalanceMap__AddressNotFound" },
    {
        type: "error",
        inputs: [],
        name: "LayerZeroClientBase__InvalidTrustedRemote",
    },
    {
        type: "error",
        inputs: [],
        name: "LayerZeroClientBase__NotLayerZeroEndpoint",
    },
    {
        type: "error",
        inputs: [],
        name: "LayerZeroClientReceiver__InvalidPayload",
    },
    { type: "error", inputs: [], name: "LayerZeroClientReceiver__NotSelf" },
    { type: "error", inputs: [], name: "Omnichain__EmptyBatch" },
    { type: "error", inputs: [], name: "Properties__InvalidDataHash" },
    { type: "error", inputs: [], name: "Properties__InvalidEntries" },
    { type: "error", inputs: [], name: "Properties__InvalidParams" },
    { type: "error", inputs: [], name: "Properties__InvalidSigner" },
    { type: "error", inputs: [], name: "PropertyMap__NonExistentID" },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InsufficientClaim",
    },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidAccreditation",
    },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidBurn",
    },
    {
        type: "error",
        inputs: [{ name: "claimID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidClaim",
    },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidCredit",
    },
    {
        type: "error",
        inputs: [],
        name: "ComponentInitializable__AlreadyInitialized",
    },
    { type: "error", inputs: [], name: "ERC165Base__InvalidInterfaceId" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "creditID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
            {
                name: "validFrom",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            {
                name: "validTo",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            { name: "value", internalType: "uint64", type: "uint64", indexed: false },
            { name: "uri", internalType: "string", type: "string", indexed: false },
        ],
        name: "Accredited",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "approved", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "ApprovalForAll",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "creditID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "RevokedAccreditation",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "ids",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
            {
                name: "values",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
        ],
        name: "TransferBatch",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            { name: "id", internalType: "uint256", type: "uint256", indexed: false },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "TransferSingle",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "wordPos",
                internalType: "uint248",
                type: "uint248",
                indexed: true,
            },
            {
                name: "mask",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "UnorderedNonceInvalidation",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "selector",
                internalType: "bytes4",
                type: "bytes4",
                indexed: true,
            },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "ValueSet",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "claimID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
            {
                name: "validFrom",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            {
                name: "validTo",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            { name: "value", internalType: "uint64", type: "uint64", indexed: false },
            { name: "uri", internalType: "string", type: "string", indexed: false },
        ],
        name: "Claimed",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "claimID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "RevokedClaim",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "user", internalType: "address", type: "address", indexed: true },
            {
                name: "newAuthority",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "AuthorityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "sourceChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "path", internalType: "bytes", type: "bytes", indexed: false },
            { name: "nonce", internalType: "uint64", type: "uint64", indexed: false },
            { name: "data", internalType: "bytes", type: "bytes", indexed: false },
            { name: "reason", internalType: "bytes", type: "bytes", indexed: false },
        ],
        name: "MessageFailed",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "destinationChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "payload", internalType: "bytes", type: "bytes", indexed: false },
            {
                name: "refundAddress",
                internalType: "address",
                type: "address",
                indexed: false,
            },
            {
                name: "zroPaymentAddress",
                internalType: "address",
                type: "address",
                indexed: false,
            },
            {
                name: "adapterParams",
                internalType: "bytes",
                type: "bytes",
                indexed: false,
            },
            {
                name: "nativeFee",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "MessageSent",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "sourceChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "path", internalType: "bytes", type: "bytes", indexed: false },
            { name: "nonce", internalType: "uint64", type: "uint64", indexed: false },
            { name: "data", internalType: "bytes", type: "bytes", indexed: false },
        ],
        name: "MessageSucceeded",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "fromChainID",
                internalType: "uint16",
                type: "uint16",
                indexed: true,
            },
            { name: "from", internalType: "bytes", type: "bytes", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "ids",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
            {
                name: "amounts",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
        ],
        name: "ReceiveBatchFromChain",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "toChainID",
                internalType: "uint16",
                type: "uint16",
                indexed: true,
            },
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "bytes", type: "bytes", indexed: true },
            {
                name: "ids",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
            {
                name: "amounts",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
        ],
        name: "SendBatchToChain",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "remoteChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "path", internalType: "bytes", type: "bytes", indexed: false },
        ],
        name: "SetTrustedRemote",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: false,
            },
            {
                name: "creditID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
            {
                name: "keys",
                internalType: "bytes32[]",
                type: "bytes32[]",
                indexed: false,
            },
            {
                name: "values",
                internalType: "bytes32[]",
                type: "bytes32[]",
                indexed: false,
            },
        ],
        name: "SetProperties",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "RegisteredAccount",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
            {
                name: "auth",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "RegisteredMethodology",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
            {
                name: "auth",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "RegisteredRegenerator",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "value", internalType: "string", type: "string", indexed: false },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "URI",
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "ACCREDITATION_PARAMS_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "REVOKE_ACCREDITATION_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.AccreditationParams",
                type: "tuple",
                components: [
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                    { name: "methodologyID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "accredit",
        outputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.AccreditationParams",
                type: "tuple",
                components: [
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                    { name: "methodologyID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "accreditWithSignature",
        outputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getAccreditation",
        outputs: [
            {
                name: "",
                internalType: "struct AttestationLib.Value",
                type: "tuple",
                components: [
                    { name: "value", internalType: "uint64", type: "uint64" },
                    { name: "validFrom", internalType: "uint32", type: "uint32" },
                    { name: "validTo", internalType: "uint32", type: "uint32" },
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "uri", internalType: "string", type: "string" },
                ],
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getAccreditationURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "timestamp", internalType: "uint32", type: "uint32" },
        ],
        name: "getAccreditationValue",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.AccreditationParams",
                type: "tuple",
                components: [
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                    { name: "methodologyID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "hashAccreditation",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.RevokeAccreditationParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "hashRevokeAccreditation",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isRevokedAccreditation",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isValidAccreditation",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.RevokeAccreditationParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "revokeAccreditation",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.RevokeAccreditationParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "revokeAccreditationWithSignature",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "CLAIM_PARAMS_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "REVOKE_CLAIM_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.ClaimParams",
                type: "tuple",
                components: [
                    { name: "regeneratorID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "claim",
        outputs: [{ name: "claimID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.ClaimParams",
                type: "tuple",
                components: [
                    { name: "regeneratorID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "claimWithSignature",
        outputs: [{ name: "claimID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getClaim",
        outputs: [
            {
                name: "",
                internalType: "struct AttestationLib.Value",
                type: "tuple",
                components: [
                    { name: "value", internalType: "uint64", type: "uint64" },
                    { name: "validFrom", internalType: "uint32", type: "uint32" },
                    { name: "validTo", internalType: "uint32", type: "uint32" },
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "uri", internalType: "string", type: "string" },
                ],
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getClaimURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "timestamp", internalType: "uint32", type: "uint32" },
        ],
        name: "getClaimValue",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.ClaimParams",
                type: "tuple",
                components: [
                    { name: "regeneratorID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "hashClaim",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.RevokeClaimParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "hashRevokeClaim",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isRevokedClaim",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isValidClaim",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.RevokeClaimParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "revokeClaim",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.RevokeClaimParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "revokeClaimWithSignature",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
            { name: "amounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "useZro", internalType: "bool", type: "bool" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "estimateSendBatchFee",
        outputs: [
            { name: "nativeFee", internalType: "uint256", type: "uint256" },
            { name: "zroFee", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
            { name: "useZro", internalType: "bool", type: "bool" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "estimateSendFee",
        outputs: [
            { name: "nativeFee", internalType: "uint256", type: "uint256" },
            { name: "zroFee", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "srcChainId", internalType: "uint16", type: "uint16" },
            { name: "srcAddress", internalType: "bytes", type: "bytes" },
        ],
        name: "forceLayerZeroResumeReceive",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "version", internalType: "uint16", type: "uint16" },
            { name: "chainId", internalType: "uint16", type: "uint16" },
            { name: "configType", internalType: "uint256", type: "uint256" },
        ],
        name: "getLayerZeroConfig",
        outputs: [{ name: "config", internalType: "bytes", type: "bytes" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "getLayerZeroEndpoint",
        outputs: [
            {
                name: "",
                internalType: "contract ILayerZeroEndpoint",
                type: "address",
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "sourceChainId", internalType: "uint16", type: "uint16" },
            { name: "path", internalType: "bytes", type: "bytes" },
            { name: "nonce", internalType: "uint64", type: "uint64" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "isBlocking",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "sourceChainId", internalType: "uint16", type: "uint16" },
            { name: "path", internalType: "bytes", type: "bytes" },
            { name: "nonce", internalType: "uint64", type: "uint64" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "lzReceive",
        outputs: [],
    },
    {
        stateMutability: "pure",
        type: "function",
        inputs: [
            { name: "", internalType: "address", type: "address" },
            { name: "", internalType: "address", type: "address" },
            { name: "", internalType: "uint256[]", type: "uint256[]" },
            { name: "", internalType: "uint256[]", type: "uint256[]" },
            { name: "", internalType: "bytes", type: "bytes" },
        ],
        name: "onERC1155BatchReceived",
        outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    },
    {
        stateMutability: "pure",
        type: "function",
        inputs: [
            { name: "", internalType: "address", type: "address" },
            { name: "", internalType: "address", type: "address" },
            { name: "", internalType: "uint256", type: "uint256" },
            { name: "", internalType: "uint256", type: "uint256" },
            { name: "", internalType: "bytes", type: "bytes" },
        ],
        name: "onERC1155Received",
        outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "sourceChainId", internalType: "uint16", type: "uint16" },
            { name: "path", internalType: "bytes", type: "bytes" },
            { name: "nonce", internalType: "uint64", type: "uint64" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "retryMessage",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
            { name: "amounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "", internalType: "address payable", type: "address" },
            { name: "zroPayer", internalType: "address", type: "address" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "sendBatchFrom",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
            { name: "", internalType: "address payable", type: "address" },
            { name: "zroPayer", internalType: "address", type: "address" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "sendFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "version", internalType: "uint16", type: "uint16" },
            { name: "chainId", internalType: "uint16", type: "uint16" },
            { name: "configType", internalType: "uint256", type: "uint256" },
            { name: "config", internalType: "bytes", type: "bytes" },
        ],
        name: "setLayerZeroConfig",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "version", internalType: "uint16", type: "uint16" }],
        name: "setLayerZeroReceiveVersion",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "version", internalType: "uint16", type: "uint16" }],
        name: "setLayerZeroSendVersion",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "sourceChainId", internalType: "uint16", type: "uint16" },
            { name: "path", internalType: "bytes", type: "bytes" },
            { name: "nonce", internalType: "uint64", type: "uint64" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "tryMessage",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "SET_PROPERTIES_PARAMS_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getProperties",
        outputs: [
            {
                name: "",
                internalType: "struct PropertyMap.Entry[]",
                type: "tuple[]",
                components: [
                    { name: "key", internalType: "bytes32", type: "bytes32" },
                    { name: "value", internalType: "bytes32", type: "bytes32" },
                ],
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
            { name: "expectedValues", internalType: "bytes32[]", type: "bytes32[]" },
        ],
        name: "hasProperties",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Properties.SetPropertiesParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                    { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
                    { name: "values", internalType: "bytes32[]", type: "bytes32[]" },
                ],
            },
        ],
        name: "hashSetProperties",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Properties.SetPropertiesParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                    { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
                    { name: "values", internalType: "bytes32[]", type: "bytes32[]" },
                ],
            },
        ],
        name: "setProperties",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Properties.SetPropertiesParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                    { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
                    { name: "values", internalType: "bytes32[]", type: "bytes32[]" },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "setPropertiesWithSignature",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [],
        name: "registerAccount",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "auth", internalType: "contract IAuthority", type: "address" },
        ],
        name: "registerMethodology",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "auth", internalType: "contract IAuthority", type: "address" },
        ],
        name: "registerRegenerator",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "eip712Domain",
        outputs: [
            { name: "fields", internalType: "bytes1", type: "bytes1" },
            { name: "name", internalType: "string", type: "string" },
            { name: "version", internalType: "string", type: "string" },
            { name: "chainId", internalType: "uint256", type: "uint256" },
            { name: "verifyingContract", internalType: "address", type: "address" },
            { name: "salt", internalType: "bytes32", type: "bytes32" },
            { name: "extensions", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
        name: "invalidateDataHash",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "nonce", internalType: "uint256", type: "uint256" },
        ],
        name: "invalidateNonce",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "wordPos", internalType: "uint248", type: "uint248" },
            { name: "mask", internalType: "uint256", type: "uint256" },
        ],
        name: "invalidateUnorderedNonces",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "nonce", internalType: "uint256", type: "uint256" },
        ],
        name: "isValidNonce",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "isRedeemable",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "mint",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "claimCounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "mintBatch",
        outputs: [
            { name: "claimIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "creditCounts", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
        ],
        name: "previewMint",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
            { name: "value", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
        ],
        name: "previewReclaim",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
            { name: "value", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "reclaim",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "creditCounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "reclaimBatch",
        outputs: [
            { name: "claimIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "claimCounts", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "creditAmount", internalType: "uint256", type: "uint256" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "redeem",
        outputs: [
            { name: "certificateID", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "creditAmounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "redeemBatch",
        outputs: [
            { name: "certificateIDs", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "balanceOf",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "accounts", internalType: "address[]", type: "address[]" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
        ],
        name: "balanceOfBatch",
        outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "balancesOf",
        outputs: [
            {
                name: "",
                internalType: "struct BalanceMap.Entry[]",
                type: "tuple[]",
                components: [
                    { name: "key", internalType: "address", type: "address" },
                    { name: "value", internalType: "uint64", type: "uint64" },
                ],
            },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "emitURI",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "operator", internalType: "address", type: "address" },
        ],
        name: "isApprovedForAll",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isTransferrable",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
            { name: "amounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeBatchTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "status", internalType: "bool", type: "bool" },
        ],
        name: "setApprovalForAll",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "totalSupply",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "pure",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "typeOf",
        outputs: [
            { name: "t", internalType: "enum Tokens.TokenType", type: "uint8" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "uri",
        outputs: [{ name: "metadataURI", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "data", internalType: "bytes[]", type: "bytes[]" }],
        name: "multicall",
        outputs: [{ name: "", internalType: "bytes[]", type: "bytes[]" }],
    },
];
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export const capAddress = {
    5: "0x121A0360977C193b02a20d0624bFD3bFf3a754F5",
    137: "0xa9476E236f41EF00aF338ED06984ccB41F04Ef36",
};
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export const capConfig = { address: capAddress, abi: capABI };
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Core
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function getAclAuthority(config) {
    return getContract({ abi: aclAuthorityABI, ...config });
}
/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function readAclAuthority(config) {
    return readContract({
        abi: aclAuthorityABI,
        ...config,
    });
}
/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function writeAclAuthority(config) {
    return writeContract({ abi: aclAuthorityABI, ...config });
}
/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function prepareWriteAclAuthority(config) {
    return prepareWriteContract({
        abi: aclAuthorityABI,
        ...config,
    });
}
/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function watchAclAuthorityEvent(config, callback) {
    return watchContractEvent({ abi: aclAuthorityABI, ...config }, callback);
}
/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function getIFactory(config) {
    return getContract({ abi: iFactoryABI, ...config });
}
/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function writeIFactory(config) {
    return writeContract({ abi: iFactoryABI, ...config });
}
/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function prepareWriteIFactory(config) {
    return prepareWriteContract({
        abi: iFactoryABI,
        ...config,
    });
}
/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function watchIFactoryEvent(config, callback) {
    return watchContractEvent({ abi: iFactoryABI, ...config }, callback);
}
/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function getMethodologies(config) {
    return getContract({
        abi: methodologiesABI,
        address: methodologiesAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function readMethodologies(config) {
    return readContract({
        abi: methodologiesABI,
        address: methodologiesAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function writeMethodologies(config) {
    return writeContract({
        abi: methodologiesABI,
        address: methodologiesAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function prepareWriteMethodologies(config) {
    return prepareWriteContract({
        abi: methodologiesABI,
        address: methodologiesAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function watchMethodologiesEvent(config, callback) {
    return watchContractEvent({
        abi: methodologiesABI,
        address: methodologiesAddress[config.chainId],
        ...config,
    }, callback);
}
/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function getRegenerators(config) {
    return getContract({
        abi: regeneratorsABI,
        address: regeneratorsAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function readRegenerators(config) {
    return readContract({
        abi: regeneratorsABI,
        address: regeneratorsAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function writeRegenerators(config) {
    return writeContract({
        abi: regeneratorsABI,
        address: regeneratorsAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function prepareWriteRegenerators(config) {
    return prepareWriteContract({
        abi: regeneratorsABI,
        address: regeneratorsAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function watchRegeneratorsEvent(config, callback) {
    return watchContractEvent({
        abi: regeneratorsABI,
        address: regeneratorsAddress[config.chainId],
        ...config,
    }, callback);
}
/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function getCap(config) {
    return getContract({
        abi: capABI,
        address: capAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function readCap(config) {
    return readContract({
        abi: capABI,
        address: capAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function writeCap(config) {
    return writeContract({
        abi: capABI,
        address: capAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function prepareWriteCap(config) {
    return prepareWriteContract({
        abi: capABI,
        address: capAddress[config.chainId],
        ...config,
    });
}
/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function watchCapEvent(config, callback) {
    return watchContractEvent({
        abi: capABI,
        address: capAddress[config.chainId],
        ...config,
    }, callback);
}
//# sourceMappingURL=data:application/json;base64,