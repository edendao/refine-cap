// SPDX-License-Identifier: BUSL-1.1
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.6. SEE SOURCE BELOW. !!
pragma solidity >=0.8.19 <0.9.0;

interface CAP {
    error Accreditations__InvalidAttestation();
    error Accreditations__InvalidClaim();
    error Accreditations__InvalidCredit();
    error Accreditations__InvalidDataHash();
    error Accreditations__InvalidMethodology();
    error Accreditations__InvalidSigner();
    error AttestationLib__InvalidSigner();
    error AttestationLib__InvalidTimestamps();
    error AttestationLib__InvalidURI();
    error Authorize__NotAuthorized();
    error Authorize__NotTokenOwner();
    error ERC1155Base__ArrayLengthMismatch();
    error ERC1155Base__BalanceQueryZeroAddress();
    error ERC1155Base__BurnExceedsBalance();
    error ERC1155Base__BurnFromZeroAddress();
    error ERC1155Base__ERC1155ReceiverNotImplemented();
    error ERC1155Base__ERC1155ReceiverRejected();
    error ERC1155Base__MintToZeroAddress();
    error ERC1155Base__NotOwnerOrApproved();
    error ERC1155Base__NotTransferrable(uint256 id);
    error ERC1155Base__SelfApproval();
    error ERC1155Base__TransferExceedsBalance();
    error ERC1155Base__TransferToZeroAddress();
    error Signatures__InvalidNonce();
    error Signatures__NotAuthorized();
    error Values__ArrayLengthMismatch();
    error Values__InsufficientValue();
    error Claims__InvalidAttestation();
    error Claims__InvalidDataHash();
    error Claims__InvalidRegenerator();
    error Claims__InvalidSigner();
    error Auth__NotAuthorized();
    error BalanceMap__AddressNotFound();
    error LayerZeroClientBase__InvalidTrustedRemote();
    error LayerZeroClientBase__NotLayerZeroEndpoint();
    error LayerZeroClientReceiver__InvalidPayload();
    error LayerZeroClientReceiver__NotSelf();
    error Omnichain__EmptyBatch();
    error Properties__InvalidDataHash();
    error Properties__InvalidEntries();
    error Properties__InvalidParams();
    error Properties__InvalidSigner();
    error PropertyMap__NonExistentID();
    error TokenOps__InsufficientClaim(uint256 creditID);
    error TokenOps__InvalidAccreditation(uint256 creditID);
    error TokenOps__InvalidBurn(uint256 creditID);
    error TokenOps__InvalidClaim(uint256 claimID);
    error TokenOps__InvalidCredit(uint256 creditID);
    error ComponentInitializable__AlreadyInitialized();
    error ERC165Base__InvalidInterfaceId();
    event Accredited(
        address indexed signer,
        uint256 indexed creditID,
        uint32 validFrom,
        uint32 validTo,
        uint64 value,
        string uri
    );
    event ApprovalForAll(
        address indexed account,
        address indexed operator,
        bool approved
    );
    event RevokedAccreditation(
        address indexed signer,
        uint256 indexed creditID
    );
    event TransferBatch(
        address indexed operator,
        address indexed from,
        address indexed to,
        uint256[] ids,
        uint256[] values
    );
    event TransferSingle(
        address indexed operator,
        address indexed from,
        address indexed to,
        uint256 id,
        uint256 value
    );
    event UnorderedNonceInvalidation(
        address indexed account,
        uint248 indexed wordPos,
        uint256 mask
    );
    event ValueSet(bytes4 indexed selector, uint256 value);
    event Claimed(
        address indexed signer,
        uint256 indexed claimID,
        uint32 validFrom,
        uint32 validTo,
        uint64 value,
        string uri
    );
    event RevokedClaim(address indexed signer, uint256 indexed claimID);
    event AuthorityUpdated(address indexed user, address indexed newAuthority);
    event MessageFailed(
        uint16 sourceChainId,
        bytes path,
        uint64 nonce,
        bytes data,
        bytes reason
    );
    event MessageSent(
        uint16 destinationChainId,
        bytes payload,
        address refundAddress,
        address zroPaymentAddress,
        bytes adapterParams,
        uint256 nativeFee
    );
    event MessageSucceeded(
        uint16 sourceChainId,
        bytes path,
        uint64 nonce,
        bytes data
    );
    event ReceiveBatchFromChain(
        uint16 indexed fromChainID,
        bytes indexed from,
        address indexed to,
        uint256[] ids,
        uint256[] amounts
    );
    event SendBatchToChain(
        uint16 indexed toChainID,
        address indexed from,
        bytes indexed to,
        uint256[] ids,
        uint256[] amounts
    );
    event SetTrustedRemote(uint16 remoteChainId, bytes path);
    event SetProperties(
        address signer,
        uint256 indexed creditID,
        bytes32[] keys,
        bytes32[] values
    );
    event RegisteredAccount(address indexed account);
    event RegisteredMethodology(
        address indexed account,
        uint256 indexed id,
        address indexed auth
    );
    event RegisteredRegenerator(
        address indexed account,
        uint256 indexed id,
        address indexed auth
    );
    event URI(string value, uint256 indexed tokenId);

    function ACCREDITATION_PARAMS_TYPEHASH() external view returns (bytes32);

    function REVOKE_ACCREDITATION_TYPEHASH() external view returns (bytes32);

    function accredit(
        Accreditations.AccreditationParams memory params
    ) external payable returns (uint256 creditID);

    function accreditWithSignature(
        Accreditations.AccreditationParams memory params,
        bytes32 dataHash,
        bytes memory signature
    ) external payable returns (uint256 creditID);

    function getAccreditation(
        uint256 id
    ) external view returns (AttestationLib.Value memory);

    function getAccreditationURI(
        uint256 id
    ) external view returns (string memory);

    function getAccreditationValue(
        uint256 id,
        uint32 timestamp
    ) external view returns (uint256);

    function hashAccreditation(
        Accreditations.AccreditationParams memory params
    ) external view returns (bytes32 dataHash);

    function hashRevokeAccreditation(
        Claims.RevokeClaimParams memory params
    ) external view returns (bytes32 dataHash);

    function isRevokedAccreditation(uint256 id) external view returns (bool);

    function isValidAccreditation(uint256 id) external view returns (bool);

    function revokeAccreditation(
        Claims.RevokeClaimParams memory params
    ) external payable;

    function revokeAccreditationWithSignature(
        Claims.RevokeClaimParams memory params,
        bytes32 dataHash,
        bytes memory signature
    ) external payable;

    function CLAIM_PARAMS_TYPEHASH() external view returns (bytes32);

    function REVOKE_CLAIM_TYPEHASH() external view returns (bytes32);

    function claim(
        Claims.ClaimParams memory params
    ) external payable returns (uint256 claimID);

    function claimWithSignature(
        Claims.ClaimParams memory params,
        bytes32 dataHash,
        bytes memory signature
    ) external payable returns (uint256 claimID);

    function getClaim(
        uint256 id
    ) external view returns (AttestationLib.Value memory);

    function getClaimURI(uint256 id) external view returns (string memory);

    function getClaimValue(
        uint256 id,
        uint32 timestamp
    ) external view returns (uint256);

    function hashClaim(
        Claims.ClaimParams memory params
    ) external view returns (bytes32 dataHash);

    function hashRevokeClaim(
        Claims.RevokeClaimParams memory params
    ) external view returns (bytes32 dataHash);

    function isRevokedClaim(uint256 id) external view returns (bool);

    function isValidClaim(uint256 id) external view returns (bool);

    function revokeClaim(
        Claims.RevokeClaimParams memory params
    ) external payable;

    function revokeClaimWithSignature(
        Claims.RevokeClaimParams memory params,
        bytes32 dataHash,
        bytes memory signature
    ) external payable;

    function estimateSendBatchFee(
        uint16 toChainID,
        bytes memory to,
        uint256[] memory ids,
        uint256[] memory amounts,
        bool useZro,
        bytes memory adapterParams
    ) external view returns (uint256 nativeFee, uint256 zroFee);

    function estimateSendFee(
        uint16 toChainID,
        bytes memory to,
        uint256 id,
        uint256 amount,
        bool useZro,
        bytes memory adapterParams
    ) external view returns (uint256 nativeFee, uint256 zroFee);

    function forceLayerZeroResumeReceive(
        uint16 srcChainId,
        bytes memory srcAddress
    ) external;

    function getLayerZeroConfig(
        uint16 version,
        uint16 chainId,
        uint256 configType
    ) external view returns (bytes memory config);

    function getLayerZeroEndpoint() external view returns (address);

    function isBlocking(
        uint16 sourceChainId,
        bytes memory path,
        uint64 nonce,
        bytes memory data
    ) external view returns (bool);

    function lzReceive(
        uint16 sourceChainId,
        bytes memory path,
        uint64 nonce,
        bytes memory data
    ) external;

    function onERC1155BatchReceived(
        address,
        address,
        uint256[] memory,
        uint256[] memory,
        bytes memory
    ) external pure returns (bytes4);

    function onERC1155Received(
        address,
        address,
        uint256,
        uint256,
        bytes memory
    ) external pure returns (bytes4);

    function retryMessage(
        uint16 sourceChainId,
        bytes memory path,
        uint64 nonce,
        bytes memory data
    ) external;

    function sendBatchFrom(
        address from,
        uint16 toChainID,
        bytes memory to,
        uint256[] memory ids,
        uint256[] memory amounts,
        address,
        address zroPayer,
        bytes memory adapterParams
    ) external payable;

    function sendFrom(
        address from,
        uint16 toChainID,
        bytes memory to,
        uint256 id,
        uint256 amount,
        address,
        address zroPayer,
        bytes memory adapterParams
    ) external payable;

    function setLayerZeroConfig(
        uint16 version,
        uint16 chainId,
        uint256 configType,
        bytes memory config
    ) external;

    function setLayerZeroReceiveVersion(uint16 version) external;

    function setLayerZeroSendVersion(uint16 version) external;

    function tryMessage(
        uint16 sourceChainId,
        bytes memory path,
        uint64 nonce,
        bytes memory data
    ) external;

    function SET_PROPERTIES_PARAMS_TYPEHASH() external view returns (bytes32);

    function getProperties(
        uint256 id
    ) external view returns (PropertyMap.Entry[] memory);

    function hasProperties(
        uint256 id,
        bytes32[] memory keys,
        bytes32[] memory expectedValues
    ) external view returns (bool);

    function hashSetProperties(
        Properties.SetPropertiesParams memory params
    ) external view returns (bytes32 dataHash);

    function setProperties(
        Properties.SetPropertiesParams memory params
    ) external payable;

    function setPropertiesWithSignature(
        Properties.SetPropertiesParams memory params,
        bytes32 dataHash,
        bytes memory signature
    ) external payable;

    function registerAccount() external payable;

    function registerMethodology(uint256 id, address auth) external payable;

    function registerRegenerator(uint256 id, address auth) external payable;

    function eip712Domain()
        external
        view
        returns (
            bytes1 fields,
            string memory name,
            string memory version,
            uint256 chainId,
            address verifyingContract,
            bytes32 salt,
            uint256[] memory extensions
        );

    function invalidateDataHash(bytes32 dataHash) external payable;

    function invalidateNonce(address account, uint256 nonce) external payable;

    function invalidateUnorderedNonces(
        uint248 wordPos,
        uint256 mask
    ) external payable;

    function isValidNonce(
        address account,
        uint256 nonce
    ) external view returns (bool);

    function isRedeemable(uint256 creditID) external view returns (bool);

    function mint(
        uint256 creditID,
        uint256 claimCount,
        address receiver
    ) external payable returns (uint256 claimID, uint256 creditCount);

    function mintBatch(
        uint256[] memory creditIDs,
        uint256[] memory claimCounts,
        address receiver
    )
        external
        payable
        returns (uint256[] memory claimIDs, uint256[] memory creditCounts);

    function previewMint(
        uint256 creditID,
        uint256 claimCount
    )
        external
        view
        returns (uint256 claimID, uint256 creditCount, uint256 value);

    function previewReclaim(
        uint256 creditID,
        uint256 creditCount
    )
        external
        view
        returns (uint256 claimID, uint256 claimCount, uint256 value);

    function reclaim(
        uint256 creditID,
        uint256 creditCount,
        address receiver
    ) external payable returns (uint256 claimID, uint256 claimCount);

    function reclaimBatch(
        uint256[] memory creditIDs,
        uint256[] memory creditCounts,
        address receiver
    )
        external
        payable
        returns (uint256[] memory claimIDs, uint256[] memory claimCounts);

    function redeem(
        uint256 creditID,
        uint256 creditAmount,
        address receiver
    ) external payable returns (uint256 certificateID);

    function redeemBatch(
        uint256[] memory creditIDs,
        uint256[] memory creditAmounts,
        address receiver
    ) external payable returns (uint256[] memory certificateIDs);

    function balanceOf(
        address account,
        uint256 id
    ) external view returns (uint256);

    function balanceOfBatch(
        address[] memory accounts,
        uint256[] memory ids
    ) external view returns (uint256[] memory);

    function balancesOf(
        uint256 id
    ) external view returns (BalanceMap.Entry[] memory);

    function emitURI(uint256 id) external payable;

    function isApprovedForAll(
        address account,
        address operator
    ) external view returns (bool);

    function isTransferrable(uint256 id) external view returns (bool);

    function safeBatchTransferFrom(
        address from,
        address to,
        uint256[] memory ids,
        uint256[] memory amounts,
        bytes memory data
    ) external;

    function safeTransferFrom(
        address from,
        address to,
        uint256 id,
        uint256 amount,
        bytes memory data
    ) external;

    function setApprovalForAll(address operator, bool status) external;

    function totalSupply(uint256 id) external view returns (uint256);

    function typeOf(uint256 id) external pure returns (uint8 t);

    function uri(uint256 id) external view returns (string memory metadataURI);

    function multicall(bytes[] memory data) external returns (bytes[] memory);
}

interface Accreditations {
    struct AccreditationParams {
        uint256 claimID;
        uint256 methodologyID;
        AttestationLib.Value attestation;
    }

    struct RevokeClaimParams {
        address signer;
        uint256 claimID;
    }
}

interface AttestationLib {
    struct Value {
        uint64 value;
        uint32 validFrom;
        uint32 validTo;
        address signer;
        string uri;
    }
}

interface Claims {
    struct RevokeClaimParams {
        address signer;
        uint256 claimID;
    }

    struct ClaimParams {
        uint256 regeneratorID;
        AttestationLib.Value attestation;
    }
}

interface PropertyMap {
    struct Entry {
        bytes32 key;
        bytes32 value;
    }
}

interface Properties {
    struct SetPropertiesParams {
        address signer;
        uint256 creditID;
        bytes32[] keys;
        bytes32[] values;
    }
}

interface BalanceMap {
    struct Entry {
        address key;
        uint64 value;
    }
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"type":"error","inputs":[],"name":"Accreditations__InvalidAttestation"},{"type":"error","inputs":[],"name":"Accreditations__InvalidClaim"},{"type":"error","inputs":[],"name":"Accreditations__InvalidCredit"},{"type":"error","inputs":[],"name":"Accreditations__InvalidDataHash"},{"type":"error","inputs":[],"name":"Accreditations__InvalidMethodology"},{"type":"error","inputs":[],"name":"Accreditations__InvalidSigner"},{"type":"error","inputs":[],"name":"AttestationLib__InvalidSigner"},{"type":"error","inputs":[],"name":"AttestationLib__InvalidTimestamps"},{"type":"error","inputs":[],"name":"AttestationLib__InvalidURI"},{"type":"error","inputs":[],"name":"Authorize__NotAuthorized"},{"type":"error","inputs":[],"name":"Authorize__NotTokenOwner"},{"type":"error","inputs":[],"name":"ERC1155Base__ArrayLengthMismatch"},{"type":"error","inputs":[],"name":"ERC1155Base__BalanceQueryZeroAddress"},{"type":"error","inputs":[],"name":"ERC1155Base__BurnExceedsBalance"},{"type":"error","inputs":[],"name":"ERC1155Base__BurnFromZeroAddress"},{"type":"error","inputs":[],"name":"ERC1155Base__ERC1155ReceiverNotImplemented"},{"type":"error","inputs":[],"name":"ERC1155Base__ERC1155ReceiverRejected"},{"type":"error","inputs":[],"name":"ERC1155Base__MintToZeroAddress"},{"type":"error","inputs":[],"name":"ERC1155Base__NotOwnerOrApproved"},{"type":"error","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"ERC1155Base__NotTransferrable"},{"type":"error","inputs":[],"name":"ERC1155Base__SelfApproval"},{"type":"error","inputs":[],"name":"ERC1155Base__TransferExceedsBalance"},{"type":"error","inputs":[],"name":"ERC1155Base__TransferToZeroAddress"},{"type":"error","inputs":[],"name":"Signatures__InvalidNonce"},{"type":"error","inputs":[],"name":"Signatures__NotAuthorized"},{"type":"error","inputs":[],"name":"Values__ArrayLengthMismatch"},{"type":"error","inputs":[],"name":"Values__InsufficientValue"},{"type":"error","inputs":[],"name":"Claims__InvalidAttestation"},{"type":"error","inputs":[],"name":"Claims__InvalidDataHash"},{"type":"error","inputs":[],"name":"Claims__InvalidRegenerator"},{"type":"error","inputs":[],"name":"Claims__InvalidSigner"},{"type":"error","inputs":[],"name":"Auth__NotAuthorized"},{"type":"error","inputs":[],"name":"BalanceMap__AddressNotFound"},{"type":"error","inputs":[],"name":"LayerZeroClientBase__InvalidTrustedRemote"},{"type":"error","inputs":[],"name":"LayerZeroClientBase__NotLayerZeroEndpoint"},{"type":"error","inputs":[],"name":"LayerZeroClientReceiver__InvalidPayload"},{"type":"error","inputs":[],"name":"LayerZeroClientReceiver__NotSelf"},{"type":"error","inputs":[],"name":"Omnichain__EmptyBatch"},{"type":"error","inputs":[],"name":"Properties__InvalidDataHash"},{"type":"error","inputs":[],"name":"Properties__InvalidEntries"},{"type":"error","inputs":[],"name":"Properties__InvalidParams"},{"type":"error","inputs":[],"name":"Properties__InvalidSigner"},{"type":"error","inputs":[],"name":"PropertyMap__NonExistentID"},{"type":"error","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}],"name":"TokenOps__InsufficientClaim"},{"type":"error","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}],"name":"TokenOps__InvalidAccreditation"},{"type":"error","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}],"name":"TokenOps__InvalidBurn"},{"type":"error","inputs":[{"name":"claimID","internalType":"uint256","type":"uint256"}],"name":"TokenOps__InvalidClaim"},{"type":"error","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}],"name":"TokenOps__InvalidCredit"},{"type":"error","inputs":[],"name":"ComponentInitializable__AlreadyInitialized"},{"type":"error","inputs":[],"name":"ERC165Base__InvalidInterfaceId"},{"type":"event","anonymous":false,"inputs":[{"name":"signer","internalType":"address","type":"address","indexed":true},{"name":"creditID","internalType":"uint256","type":"uint256","indexed":true},{"name":"validFrom","internalType":"uint32","type":"uint32","indexed":false},{"name":"validTo","internalType":"uint32","type":"uint32","indexed":false},{"name":"value","internalType":"uint64","type":"uint64","indexed":false},{"name":"uri","internalType":"string","type":"string","indexed":false}],"name":"Accredited"},{"type":"event","anonymous":false,"inputs":[{"name":"account","internalType":"address","type":"address","indexed":true},{"name":"operator","internalType":"address","type":"address","indexed":true},{"name":"approved","internalType":"bool","type":"bool","indexed":false}],"name":"ApprovalForAll"},{"type":"event","anonymous":false,"inputs":[{"name":"signer","internalType":"address","type":"address","indexed":true},{"name":"creditID","internalType":"uint256","type":"uint256","indexed":true}],"name":"RevokedAccreditation"},{"type":"event","anonymous":false,"inputs":[{"name":"operator","internalType":"address","type":"address","indexed":true},{"name":"from","internalType":"address","type":"address","indexed":true},{"name":"to","internalType":"address","type":"address","indexed":true},{"name":"ids","internalType":"uint256[]","type":"uint256[]","indexed":false},{"name":"values","internalType":"uint256[]","type":"uint256[]","indexed":false}],"name":"TransferBatch"},{"type":"event","anonymous":false,"inputs":[{"name":"operator","internalType":"address","type":"address","indexed":true},{"name":"from","internalType":"address","type":"address","indexed":true},{"name":"to","internalType":"address","type":"address","indexed":true},{"name":"id","internalType":"uint256","type":"uint256","indexed":false},{"name":"value","internalType":"uint256","type":"uint256","indexed":false}],"name":"TransferSingle"},{"type":"event","anonymous":false,"inputs":[{"name":"account","internalType":"address","type":"address","indexed":true},{"name":"wordPos","internalType":"uint248","type":"uint248","indexed":true},{"name":"mask","internalType":"uint256","type":"uint256","indexed":false}],"name":"UnorderedNonceInvalidation"},{"type":"event","anonymous":false,"inputs":[{"name":"selector","internalType":"bytes4","type":"bytes4","indexed":true},{"name":"value","internalType":"uint256","type":"uint256","indexed":false}],"name":"ValueSet"},{"type":"event","anonymous":false,"inputs":[{"name":"signer","internalType":"address","type":"address","indexed":true},{"name":"claimID","internalType":"uint256","type":"uint256","indexed":true},{"name":"validFrom","internalType":"uint32","type":"uint32","indexed":false},{"name":"validTo","internalType":"uint32","type":"uint32","indexed":false},{"name":"value","internalType":"uint64","type":"uint64","indexed":false},{"name":"uri","internalType":"string","type":"string","indexed":false}],"name":"Claimed"},{"type":"event","anonymous":false,"inputs":[{"name":"signer","internalType":"address","type":"address","indexed":true},{"name":"claimID","internalType":"uint256","type":"uint256","indexed":true}],"name":"RevokedClaim"},{"type":"event","anonymous":false,"inputs":[{"name":"user","internalType":"address","type":"address","indexed":true},{"name":"newAuthority","internalType":"contract IAuthority","type":"address","indexed":true}],"name":"AuthorityUpdated"},{"type":"event","anonymous":false,"inputs":[{"name":"sourceChainId","internalType":"uint16","type":"uint16","indexed":false},{"name":"path","internalType":"bytes","type":"bytes","indexed":false},{"name":"nonce","internalType":"uint64","type":"uint64","indexed":false},{"name":"data","internalType":"bytes","type":"bytes","indexed":false},{"name":"reason","internalType":"bytes","type":"bytes","indexed":false}],"name":"MessageFailed"},{"type":"event","anonymous":false,"inputs":[{"name":"destinationChainId","internalType":"uint16","type":"uint16","indexed":false},{"name":"payload","internalType":"bytes","type":"bytes","indexed":false},{"name":"refundAddress","internalType":"address","type":"address","indexed":false},{"name":"zroPaymentAddress","internalType":"address","type":"address","indexed":false},{"name":"adapterParams","internalType":"bytes","type":"bytes","indexed":false},{"name":"nativeFee","internalType":"uint256","type":"uint256","indexed":false}],"name":"MessageSent"},{"type":"event","anonymous":false,"inputs":[{"name":"sourceChainId","internalType":"uint16","type":"uint16","indexed":false},{"name":"path","internalType":"bytes","type":"bytes","indexed":false},{"name":"nonce","internalType":"uint64","type":"uint64","indexed":false},{"name":"data","internalType":"bytes","type":"bytes","indexed":false}],"name":"MessageSucceeded"},{"type":"event","anonymous":false,"inputs":[{"name":"fromChainID","internalType":"uint16","type":"uint16","indexed":true},{"name":"from","internalType":"bytes","type":"bytes","indexed":true},{"name":"to","internalType":"address","type":"address","indexed":true},{"name":"ids","internalType":"uint256[]","type":"uint256[]","indexed":false},{"name":"amounts","internalType":"uint256[]","type":"uint256[]","indexed":false}],"name":"ReceiveBatchFromChain"},{"type":"event","anonymous":false,"inputs":[{"name":"toChainID","internalType":"uint16","type":"uint16","indexed":true},{"name":"from","internalType":"address","type":"address","indexed":true},{"name":"to","internalType":"bytes","type":"bytes","indexed":true},{"name":"ids","internalType":"uint256[]","type":"uint256[]","indexed":false},{"name":"amounts","internalType":"uint256[]","type":"uint256[]","indexed":false}],"name":"SendBatchToChain"},{"type":"event","anonymous":false,"inputs":[{"name":"remoteChainId","internalType":"uint16","type":"uint16","indexed":false},{"name":"path","internalType":"bytes","type":"bytes","indexed":false}],"name":"SetTrustedRemote"},{"type":"event","anonymous":false,"inputs":[{"name":"signer","internalType":"address","type":"address","indexed":false},{"name":"creditID","internalType":"uint256","type":"uint256","indexed":true},{"name":"keys","internalType":"bytes32[]","type":"bytes32[]","indexed":false},{"name":"values","internalType":"bytes32[]","type":"bytes32[]","indexed":false}],"name":"SetProperties"},{"type":"event","anonymous":false,"inputs":[{"name":"account","internalType":"address","type":"address","indexed":true}],"name":"RegisteredAccount"},{"type":"event","anonymous":false,"inputs":[{"name":"account","internalType":"address","type":"address","indexed":true},{"name":"id","internalType":"uint256","type":"uint256","indexed":true},{"name":"auth","internalType":"contract IAuthority","type":"address","indexed":true}],"name":"RegisteredMethodology"},{"type":"event","anonymous":false,"inputs":[{"name":"account","internalType":"address","type":"address","indexed":true},{"name":"id","internalType":"uint256","type":"uint256","indexed":true},{"name":"auth","internalType":"contract IAuthority","type":"address","indexed":true}],"name":"RegisteredRegenerator"},{"type":"event","anonymous":false,"inputs":[{"name":"value","internalType":"string","type":"string","indexed":false},{"name":"tokenId","internalType":"uint256","type":"uint256","indexed":true}],"name":"URI"},{"stateMutability":"view","type":"function","inputs":[],"name":"ACCREDITATION_PARAMS_TYPEHASH","outputs":[{"name":"","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[],"name":"REVOKE_ACCREDITATION_TYPEHASH","outputs":[{"name":"","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Accreditations.AccreditationParams","type":"tuple","components":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"methodologyID","internalType":"uint256","type":"uint256"},{"name":"attestation","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]}],"name":"accredit","outputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Accreditations.AccreditationParams","type":"tuple","components":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"methodologyID","internalType":"uint256","type":"uint256"},{"name":"attestation","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]},{"name":"dataHash","internalType":"bytes32","type":"bytes32"},{"name":"signature","internalType":"bytes","type":"bytes"}],"name":"accreditWithSignature","outputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"getAccreditation","outputs":[{"name":"","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"getAccreditationURI","outputs":[{"name":"","internalType":"string","type":"string"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"},{"name":"timestamp","internalType":"uint32","type":"uint32"}],"name":"getAccreditationValue","outputs":[{"name":"","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"params","internalType":"struct Accreditations.AccreditationParams","type":"tuple","components":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"methodologyID","internalType":"uint256","type":"uint256"},{"name":"attestation","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]}],"name":"hashAccreditation","outputs":[{"name":"dataHash","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"params","internalType":"struct Accreditations.RevokeAccreditationParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"creditID","internalType":"uint256","type":"uint256"}]}],"name":"hashRevokeAccreditation","outputs":[{"name":"dataHash","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"isRevokedAccreditation","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"isValidAccreditation","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Accreditations.RevokeAccreditationParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"creditID","internalType":"uint256","type":"uint256"}]}],"name":"revokeAccreditation","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Accreditations.RevokeAccreditationParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"creditID","internalType":"uint256","type":"uint256"}]},{"name":"dataHash","internalType":"bytes32","type":"bytes32"},{"name":"signature","internalType":"bytes","type":"bytes"}],"name":"revokeAccreditationWithSignature","outputs":[]},{"stateMutability":"view","type":"function","inputs":[],"name":"CLAIM_PARAMS_TYPEHASH","outputs":[{"name":"","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[],"name":"REVOKE_CLAIM_TYPEHASH","outputs":[{"name":"","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Claims.ClaimParams","type":"tuple","components":[{"name":"regeneratorID","internalType":"uint256","type":"uint256"},{"name":"attestation","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]}],"name":"claim","outputs":[{"name":"claimID","internalType":"uint256","type":"uint256"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Claims.ClaimParams","type":"tuple","components":[{"name":"regeneratorID","internalType":"uint256","type":"uint256"},{"name":"attestation","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]},{"name":"dataHash","internalType":"bytes32","type":"bytes32"},{"name":"signature","internalType":"bytes","type":"bytes"}],"name":"claimWithSignature","outputs":[{"name":"claimID","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"getClaim","outputs":[{"name":"","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"getClaimURI","outputs":[{"name":"","internalType":"string","type":"string"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"},{"name":"timestamp","internalType":"uint32","type":"uint32"}],"name":"getClaimValue","outputs":[{"name":"","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"params","internalType":"struct Claims.ClaimParams","type":"tuple","components":[{"name":"regeneratorID","internalType":"uint256","type":"uint256"},{"name":"attestation","internalType":"struct AttestationLib.Value","type":"tuple","components":[{"name":"value","internalType":"uint64","type":"uint64"},{"name":"validFrom","internalType":"uint32","type":"uint32"},{"name":"validTo","internalType":"uint32","type":"uint32"},{"name":"signer","internalType":"address","type":"address"},{"name":"uri","internalType":"string","type":"string"}]}]}],"name":"hashClaim","outputs":[{"name":"dataHash","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"params","internalType":"struct Claims.RevokeClaimParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"claimID","internalType":"uint256","type":"uint256"}]}],"name":"hashRevokeClaim","outputs":[{"name":"dataHash","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"isRevokedClaim","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"isValidClaim","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Claims.RevokeClaimParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"claimID","internalType":"uint256","type":"uint256"}]}],"name":"revokeClaim","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Claims.RevokeClaimParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"claimID","internalType":"uint256","type":"uint256"}]},{"name":"dataHash","internalType":"bytes32","type":"bytes32"},{"name":"signature","internalType":"bytes","type":"bytes"}],"name":"revokeClaimWithSignature","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"toChainID","internalType":"uint16","type":"uint16"},{"name":"to","internalType":"bytes","type":"bytes"},{"name":"ids","internalType":"uint256[]","type":"uint256[]"},{"name":"amounts","internalType":"uint256[]","type":"uint256[]"},{"name":"useZro","internalType":"bool","type":"bool"},{"name":"adapterParams","internalType":"bytes","type":"bytes"}],"name":"estimateSendBatchFee","outputs":[{"name":"nativeFee","internalType":"uint256","type":"uint256"},{"name":"zroFee","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"toChainID","internalType":"uint16","type":"uint16"},{"name":"to","internalType":"bytes","type":"bytes"},{"name":"id","internalType":"uint256","type":"uint256"},{"name":"amount","internalType":"uint256","type":"uint256"},{"name":"useZro","internalType":"bool","type":"bool"},{"name":"adapterParams","internalType":"bytes","type":"bytes"}],"name":"estimateSendFee","outputs":[{"name":"nativeFee","internalType":"uint256","type":"uint256"},{"name":"zroFee","internalType":"uint256","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"srcChainId","internalType":"uint16","type":"uint16"},{"name":"srcAddress","internalType":"bytes","type":"bytes"}],"name":"forceLayerZeroResumeReceive","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"version","internalType":"uint16","type":"uint16"},{"name":"chainId","internalType":"uint16","type":"uint16"},{"name":"configType","internalType":"uint256","type":"uint256"}],"name":"getLayerZeroConfig","outputs":[{"name":"config","internalType":"bytes","type":"bytes"}]},{"stateMutability":"view","type":"function","inputs":[],"name":"getLayerZeroEndpoint","outputs":[{"name":"","internalType":"contract ILayerZeroEndpoint","type":"address"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"sourceChainId","internalType":"uint16","type":"uint16"},{"name":"path","internalType":"bytes","type":"bytes"},{"name":"nonce","internalType":"uint64","type":"uint64"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"isBlocking","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"sourceChainId","internalType":"uint16","type":"uint16"},{"name":"path","internalType":"bytes","type":"bytes"},{"name":"nonce","internalType":"uint64","type":"uint64"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"lzReceive","outputs":[]},{"stateMutability":"pure","type":"function","inputs":[{"name":"","internalType":"address","type":"address"},{"name":"","internalType":"address","type":"address"},{"name":"","internalType":"uint256[]","type":"uint256[]"},{"name":"","internalType":"uint256[]","type":"uint256[]"},{"name":"","internalType":"bytes","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"name":"","internalType":"bytes4","type":"bytes4"}]},{"stateMutability":"pure","type":"function","inputs":[{"name":"","internalType":"address","type":"address"},{"name":"","internalType":"address","type":"address"},{"name":"","internalType":"uint256","type":"uint256"},{"name":"","internalType":"uint256","type":"uint256"},{"name":"","internalType":"bytes","type":"bytes"}],"name":"onERC1155Received","outputs":[{"name":"","internalType":"bytes4","type":"bytes4"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"sourceChainId","internalType":"uint16","type":"uint16"},{"name":"path","internalType":"bytes","type":"bytes"},{"name":"nonce","internalType":"uint64","type":"uint64"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"retryMessage","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"from","internalType":"address","type":"address"},{"name":"toChainID","internalType":"uint16","type":"uint16"},{"name":"to","internalType":"bytes","type":"bytes"},{"name":"ids","internalType":"uint256[]","type":"uint256[]"},{"name":"amounts","internalType":"uint256[]","type":"uint256[]"},{"name":"","internalType":"address payable","type":"address"},{"name":"zroPayer","internalType":"address","type":"address"},{"name":"adapterParams","internalType":"bytes","type":"bytes"}],"name":"sendBatchFrom","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"from","internalType":"address","type":"address"},{"name":"toChainID","internalType":"uint16","type":"uint16"},{"name":"to","internalType":"bytes","type":"bytes"},{"name":"id","internalType":"uint256","type":"uint256"},{"name":"amount","internalType":"uint256","type":"uint256"},{"name":"","internalType":"address payable","type":"address"},{"name":"zroPayer","internalType":"address","type":"address"},{"name":"adapterParams","internalType":"bytes","type":"bytes"}],"name":"sendFrom","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"version","internalType":"uint16","type":"uint16"},{"name":"chainId","internalType":"uint16","type":"uint16"},{"name":"configType","internalType":"uint256","type":"uint256"},{"name":"config","internalType":"bytes","type":"bytes"}],"name":"setLayerZeroConfig","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"version","internalType":"uint16","type":"uint16"}],"name":"setLayerZeroReceiveVersion","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"version","internalType":"uint16","type":"uint16"}],"name":"setLayerZeroSendVersion","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"sourceChainId","internalType":"uint16","type":"uint16"},{"name":"path","internalType":"bytes","type":"bytes"},{"name":"nonce","internalType":"uint64","type":"uint64"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"tryMessage","outputs":[]},{"stateMutability":"view","type":"function","inputs":[],"name":"SET_PROPERTIES_PARAMS_TYPEHASH","outputs":[{"name":"","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"getProperties","outputs":[{"name":"","internalType":"struct PropertyMap.Entry[]","type":"tuple[]","components":[{"name":"key","internalType":"bytes32","type":"bytes32"},{"name":"value","internalType":"bytes32","type":"bytes32"}]}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"},{"name":"keys","internalType":"bytes32[]","type":"bytes32[]"},{"name":"expectedValues","internalType":"bytes32[]","type":"bytes32[]"}],"name":"hasProperties","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"params","internalType":"struct Properties.SetPropertiesParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"keys","internalType":"bytes32[]","type":"bytes32[]"},{"name":"values","internalType":"bytes32[]","type":"bytes32[]"}]}],"name":"hashSetProperties","outputs":[{"name":"dataHash","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Properties.SetPropertiesParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"keys","internalType":"bytes32[]","type":"bytes32[]"},{"name":"values","internalType":"bytes32[]","type":"bytes32[]"}]}],"name":"setProperties","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"params","internalType":"struct Properties.SetPropertiesParams","type":"tuple","components":[{"name":"signer","internalType":"address","type":"address"},{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"keys","internalType":"bytes32[]","type":"bytes32[]"},{"name":"values","internalType":"bytes32[]","type":"bytes32[]"}]},{"name":"dataHash","internalType":"bytes32","type":"bytes32"},{"name":"signature","internalType":"bytes","type":"bytes"}],"name":"setPropertiesWithSignature","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[],"name":"registerAccount","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"},{"name":"auth","internalType":"contract IAuthority","type":"address"}],"name":"registerMethodology","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"},{"name":"auth","internalType":"contract IAuthority","type":"address"}],"name":"registerRegenerator","outputs":[]},{"stateMutability":"view","type":"function","inputs":[],"name":"eip712Domain","outputs":[{"name":"fields","internalType":"bytes1","type":"bytes1"},{"name":"name","internalType":"string","type":"string"},{"name":"version","internalType":"string","type":"string"},{"name":"chainId","internalType":"uint256","type":"uint256"},{"name":"verifyingContract","internalType":"address","type":"address"},{"name":"salt","internalType":"bytes32","type":"bytes32"},{"name":"extensions","internalType":"uint256[]","type":"uint256[]"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"dataHash","internalType":"bytes32","type":"bytes32"}],"name":"invalidateDataHash","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"account","internalType":"address","type":"address"},{"name":"nonce","internalType":"uint256","type":"uint256"}],"name":"invalidateNonce","outputs":[]},{"stateMutability":"payable","type":"function","inputs":[{"name":"wordPos","internalType":"uint248","type":"uint248"},{"name":"mask","internalType":"uint256","type":"uint256"}],"name":"invalidateUnorderedNonces","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"account","internalType":"address","type":"address"},{"name":"nonce","internalType":"uint256","type":"uint256"}],"name":"isValidNonce","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"}],"name":"isRedeemable","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"claimCount","internalType":"uint256","type":"uint256"},{"name":"receiver","internalType":"address","type":"address"}],"name":"mint","outputs":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"creditCount","internalType":"uint256","type":"uint256"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"creditIDs","internalType":"uint256[]","type":"uint256[]"},{"name":"claimCounts","internalType":"uint256[]","type":"uint256[]"},{"name":"receiver","internalType":"address","type":"address"}],"name":"mintBatch","outputs":[{"name":"claimIDs","internalType":"uint256[]","type":"uint256[]"},{"name":"creditCounts","internalType":"uint256[]","type":"uint256[]"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"claimCount","internalType":"uint256","type":"uint256"}],"name":"previewMint","outputs":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"creditCount","internalType":"uint256","type":"uint256"},{"name":"value","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"creditCount","internalType":"uint256","type":"uint256"}],"name":"previewReclaim","outputs":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"claimCount","internalType":"uint256","type":"uint256"},{"name":"value","internalType":"uint256","type":"uint256"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"creditCount","internalType":"uint256","type":"uint256"},{"name":"receiver","internalType":"address","type":"address"}],"name":"reclaim","outputs":[{"name":"claimID","internalType":"uint256","type":"uint256"},{"name":"claimCount","internalType":"uint256","type":"uint256"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"creditIDs","internalType":"uint256[]","type":"uint256[]"},{"name":"creditCounts","internalType":"uint256[]","type":"uint256[]"},{"name":"receiver","internalType":"address","type":"address"}],"name":"reclaimBatch","outputs":[{"name":"claimIDs","internalType":"uint256[]","type":"uint256[]"},{"name":"claimCounts","internalType":"uint256[]","type":"uint256[]"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"creditID","internalType":"uint256","type":"uint256"},{"name":"creditAmount","internalType":"uint256","type":"uint256"},{"name":"receiver","internalType":"address","type":"address"}],"name":"redeem","outputs":[{"name":"certificateID","internalType":"uint256","type":"uint256"}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"creditIDs","internalType":"uint256[]","type":"uint256[]"},{"name":"creditAmounts","internalType":"uint256[]","type":"uint256[]"},{"name":"receiver","internalType":"address","type":"address"}],"name":"redeemBatch","outputs":[{"name":"certificateIDs","internalType":"uint256[]","type":"uint256[]"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"account","internalType":"address","type":"address"},{"name":"id","internalType":"uint256","type":"uint256"}],"name":"balanceOf","outputs":[{"name":"","internalType":"uint256","type":"uint256"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"accounts","internalType":"address[]","type":"address[]"},{"name":"ids","internalType":"uint256[]","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"name":"","internalType":"uint256[]","type":"uint256[]"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"balancesOf","outputs":[{"name":"","internalType":"struct BalanceMap.Entry[]","type":"tuple[]","components":[{"name":"key","internalType":"address","type":"address"},{"name":"value","internalType":"uint64","type":"uint64"}]}]},{"stateMutability":"payable","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"emitURI","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"account","internalType":"address","type":"address"},{"name":"operator","internalType":"address","type":"address"}],"name":"isApprovedForAll","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"isTransferrable","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"from","internalType":"address","type":"address"},{"name":"to","internalType":"address","type":"address"},{"name":"ids","internalType":"uint256[]","type":"uint256[]"},{"name":"amounts","internalType":"uint256[]","type":"uint256[]"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"from","internalType":"address","type":"address"},{"name":"to","internalType":"address","type":"address"},{"name":"id","internalType":"uint256","type":"uint256"},{"name":"amount","internalType":"uint256","type":"uint256"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"safeTransferFrom","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"operator","internalType":"address","type":"address"},{"name":"status","internalType":"bool","type":"bool"}],"name":"setApprovalForAll","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"totalSupply","outputs":[{"name":"","internalType":"uint256","type":"uint256"}]},{"stateMutability":"pure","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"typeOf","outputs":[{"name":"t","internalType":"enum Tokens.TokenType","type":"uint8"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"id","internalType":"uint256","type":"uint256"}],"name":"uri","outputs":[{"name":"metadataURI","internalType":"string","type":"string"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"data","internalType":"bytes[]","type":"bytes[]"}],"name":"multicall","outputs":[{"name":"","internalType":"bytes[]","type":"bytes[]"}]}]
*/
