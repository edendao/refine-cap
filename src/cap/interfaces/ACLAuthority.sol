// SPDX-License-Identifier: BUSL-1.1
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.6. SEE SOURCE BELOW. !!
pragma solidity >=0.8.19 <0.9.0;

interface ACLAuthority {
    error ACLAuthority__NotAuthorized();
    error Initializable__AlreadyInitialized();
    error Ownable__NotOwner();
    error Ownable__NotTransitiveOwner();
    error SafeOwnable__NotNomineeOwner();
    event OwnershipTransferred(
        address indexed previousOwner,
        address indexed newOwner
    );
    event PublicCapabilityUpdated(bytes4 indexed sig, bool enabled);
    event RoleCapabilityUpdated(
        uint8 indexed role,
        bytes4 indexed sig,
        bool enabled
    );
    event TargetAuthorityUpdated(
        address indexed target,
        address indexed authority
    );
    event UserRoleUpdated(
        address indexed user,
        uint8 indexed role,
        bool enabled
    );

    function acceptOwnership() external;

    function canCall(
        address user,
        address target,
        bytes memory data
    ) external view returns (bool);

    function doesRoleHaveCapability(
        uint8 role,
        bytes4 sig
    ) external view returns (bool);

    function doesUserHaveRole(
        address user,
        uint8 role
    ) external view returns (bool);

    function getFunctionRoles(
        bytes4 selector
    ) external view returns (bytes32 roles);

    function getTargetAuthority(address target) external view returns (address);

    function getUserRoles(
        address account
    ) external view returns (bytes32 roles);

    function initialize(address newOwner) external;

    function isPublicCapability(bytes4 selector) external view returns (bool);

    function multicall(bytes[] memory data) external returns (bytes[] memory);

    function nomineeOwner() external view returns (address);

    function owner() external view returns (address);

    function setOwner(address newOwner) external;

    function setPublicCapability(bytes4 sig, bool enabled) external;

    function setRoleCapability(uint8 role, bytes4 sig, bool enabled) external;

    function setTargetAuthority(
        address target,
        address customAuthority
    ) external;

    function setUserRole(address user, uint8 role, bool enabled) external;

    function transferOwnership(address account) external;
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"newOwner","internalType":"address","type":"address"}]},{"type":"error","inputs":[],"name":"ACLAuthority__NotAuthorized"},{"type":"error","inputs":[],"name":"Initializable__AlreadyInitialized"},{"type":"error","inputs":[],"name":"Ownable__NotOwner"},{"type":"error","inputs":[],"name":"Ownable__NotTransitiveOwner"},{"type":"error","inputs":[],"name":"SafeOwnable__NotNomineeOwner"},{"type":"event","anonymous":false,"inputs":[{"name":"previousOwner","internalType":"address","type":"address","indexed":true},{"name":"newOwner","internalType":"address","type":"address","indexed":true}],"name":"OwnershipTransferred"},{"type":"event","anonymous":false,"inputs":[{"name":"sig","internalType":"bytes4","type":"bytes4","indexed":true},{"name":"enabled","internalType":"bool","type":"bool","indexed":false}],"name":"PublicCapabilityUpdated"},{"type":"event","anonymous":false,"inputs":[{"name":"role","internalType":"uint8","type":"uint8","indexed":true},{"name":"sig","internalType":"bytes4","type":"bytes4","indexed":true},{"name":"enabled","internalType":"bool","type":"bool","indexed":false}],"name":"RoleCapabilityUpdated"},{"type":"event","anonymous":false,"inputs":[{"name":"target","internalType":"address","type":"address","indexed":true},{"name":"authority","internalType":"contract IAuthority","type":"address","indexed":true}],"name":"TargetAuthorityUpdated"},{"type":"event","anonymous":false,"inputs":[{"name":"user","internalType":"address","type":"address","indexed":true},{"name":"role","internalType":"uint8","type":"uint8","indexed":true},{"name":"enabled","internalType":"bool","type":"bool","indexed":false}],"name":"UserRoleUpdated"},{"stateMutability":"nonpayable","type":"function","inputs":[],"name":"acceptOwnership","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"user","internalType":"address","type":"address"},{"name":"target","internalType":"address","type":"address"},{"name":"data","internalType":"bytes","type":"bytes"}],"name":"canCall","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"role","internalType":"uint8","type":"uint8"},{"name":"sig","internalType":"bytes4","type":"bytes4"}],"name":"doesRoleHaveCapability","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"user","internalType":"address","type":"address"},{"name":"role","internalType":"uint8","type":"uint8"}],"name":"doesUserHaveRole","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"selector","internalType":"bytes4","type":"bytes4"}],"name":"getFunctionRoles","outputs":[{"name":"roles","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"target","internalType":"address","type":"address"}],"name":"getTargetAuthority","outputs":[{"name":"","internalType":"contract IAuthority","type":"address"}]},{"stateMutability":"view","type":"function","inputs":[{"name":"account","internalType":"address","type":"address"}],"name":"getUserRoles","outputs":[{"name":"roles","internalType":"bytes32","type":"bytes32"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"newOwner","internalType":"address","type":"address"}],"name":"initialize","outputs":[]},{"stateMutability":"view","type":"function","inputs":[{"name":"selector","internalType":"bytes4","type":"bytes4"}],"name":"isPublicCapability","outputs":[{"name":"","internalType":"bool","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"data","internalType":"bytes[]","type":"bytes[]"}],"name":"multicall","outputs":[{"name":"","internalType":"bytes[]","type":"bytes[]"}]},{"stateMutability":"view","type":"function","inputs":[],"name":"nomineeOwner","outputs":[{"name":"","internalType":"address","type":"address"}]},{"stateMutability":"view","type":"function","inputs":[],"name":"owner","outputs":[{"name":"","internalType":"address","type":"address"}]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"newOwner","internalType":"address","type":"address"}],"name":"setOwner","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"sig","internalType":"bytes4","type":"bytes4"},{"name":"enabled","internalType":"bool","type":"bool"}],"name":"setPublicCapability","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"role","internalType":"uint8","type":"uint8"},{"name":"sig","internalType":"bytes4","type":"bytes4"},{"name":"enabled","internalType":"bool","type":"bool"}],"name":"setRoleCapability","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"target","internalType":"address","type":"address"},{"name":"customAuthority","internalType":"contract IAuthority","type":"address"}],"name":"setTargetAuthority","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"user","internalType":"address","type":"address"},{"name":"role","internalType":"uint8","type":"uint8"},{"name":"enabled","internalType":"bool","type":"bool"}],"name":"setUserRole","outputs":[]},{"stateMutability":"nonpayable","type":"function","inputs":[{"name":"account","internalType":"address","type":"address"}],"name":"transferOwnership","outputs":[]}]
*/
