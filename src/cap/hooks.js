// Generated by @wagmi/cli@0.1.2 on 3/30/2023 at 4:40:31 AM
import { useContract, useContractRead, useContractWrite, usePrepareContractWrite, useContractEvent, useNetwork, } from "wagmi";
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ACLAuthority
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const aclAuthorityABI = [
    { type: "error", inputs: [], name: "ACLAuthority__NotAuthorized" },
    { type: "error", inputs: [], name: "Initializable__AlreadyInitialized" },
    { type: "error", inputs: [], name: "Ownable__NotOwner" },
    { type: "error", inputs: [], name: "Ownable__NotTransitiveOwner" },
    { type: "error", inputs: [], name: "SafeOwnable__NotNomineeOwner" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "previousOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "newOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "OwnershipTransferred",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "sig", internalType: "bytes4", type: "bytes4", indexed: true },
            { name: "enabled", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "PublicCapabilityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "role", internalType: "uint8", type: "uint8", indexed: true },
            { name: "sig", internalType: "bytes4", type: "bytes4", indexed: true },
            { name: "enabled", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "RoleCapabilityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "target",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "authority",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "TargetAuthorityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "user", internalType: "address", type: "address", indexed: true },
            { name: "role", internalType: "uint8", type: "uint8", indexed: true },
            { name: "enabled", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "UserRoleUpdated",
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "user", internalType: "address", type: "address" },
            { name: "target", internalType: "address", type: "address" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "canCall",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "role", internalType: "uint8", type: "uint8" },
            { name: "sig", internalType: "bytes4", type: "bytes4" },
        ],
        name: "doesRoleHaveCapability",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "user", internalType: "address", type: "address" },
            { name: "role", internalType: "uint8", type: "uint8" },
        ],
        name: "doesUserHaveRole",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "selector", internalType: "bytes4", type: "bytes4" }],
        name: "getFunctionRoles",
        outputs: [{ name: "roles", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "target", internalType: "address", type: "address" }],
        name: "getTargetAuthority",
        outputs: [
            { name: "", internalType: "contract IAuthority", type: "address" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "getUserRoles",
        outputs: [{ name: "roles", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "selector", internalType: "bytes4", type: "bytes4" }],
        name: "isPublicCapability",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "data", internalType: "bytes[]", type: "bytes[]" }],
        name: "multicall",
        outputs: [{ name: "", internalType: "bytes[]", type: "bytes[]" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "nomineeOwner",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "owner",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
        name: "setOwner",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "sig", internalType: "bytes4", type: "bytes4" },
            { name: "enabled", internalType: "bool", type: "bool" },
        ],
        name: "setPublicCapability",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "role", internalType: "uint8", type: "uint8" },
            { name: "sig", internalType: "bytes4", type: "bytes4" },
            { name: "enabled", internalType: "bool", type: "bool" },
        ],
        name: "setRoleCapability",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "target", internalType: "address", type: "address" },
            {
                name: "customAuthority",
                internalType: "contract IAuthority",
                type: "address",
            },
        ],
        name: "setTargetAuthority",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "user", internalType: "address", type: "address" },
            { name: "role", internalType: "uint8", type: "uint8" },
            { name: "enabled", internalType: "bool", type: "bool" },
        ],
        name: "setUserRole",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "transferOwnership",
        outputs: [],
    },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IFactory
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const iFactoryABI = [
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "implementation",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "proxy",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "Deployed",
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "implementation", internalType: "address", type: "address" },
            { name: "initializer", internalType: "bytes", type: "bytes" },
        ],
        name: "deploy",
        outputs: [{ name: "proxy", internalType: "address", type: "address" }],
    },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Methodologies
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export const methodologiesABI = [
    { type: "error", inputs: [], name: "BalanceMap__AddressNotFound" },
    { type: "error", inputs: [], name: "CAP721__InvalidURI" },
    { type: "error", inputs: [], name: "CAP721__MintLimit" },
    { type: "error", inputs: [], name: "ERC165Base__InvalidInterfaceId" },
    { type: "error", inputs: [], name: "ERC721Base__BalanceQueryZeroAddress" },
    {
        type: "error",
        inputs: [],
        name: "ERC721Base__ERC721ReceiverNotImplemented",
    },
    { type: "error", inputs: [], name: "ERC721Base__InvalidOwner" },
    { type: "error", inputs: [], name: "ERC721Base__MintToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Base__NonExistentToken" },
    { type: "error", inputs: [], name: "ERC721Base__NotOwnerOrApproved" },
    { type: "error", inputs: [], name: "ERC721Base__NotTokenOwner" },
    { type: "error", inputs: [], name: "ERC721Base__SelfApproval" },
    { type: "error", inputs: [], name: "ERC721Base__TokenAlreadyMinted" },
    { type: "error", inputs: [], name: "ERC721Base__TransferToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Metadata__NonExistentToken" },
    { type: "error", inputs: [], name: "Initializable__AlreadyInitialized" },
    { type: "error", inputs: [], name: "Values__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "Values__InsufficientValue" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Approval",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "approved", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "ApprovalForAll",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "MetadataUpdate",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Transfer",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "value", internalType: "string", type: "string", indexed: false },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "URI",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "selector",
                internalType: "bytes4",
                type: "bytes4",
                indexed: true,
            },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "ValueSet",
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "approve",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "balanceOf",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getApproved",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "idRange",
        outputs: [
            { name: "", internalType: "uint64", type: "uint64" },
            { name: "", internalType: "uint64", type: "uint64" },
        ],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "idOffset", internalType: "uint64", type: "uint64" },
            { name: "idLimit", internalType: "uint64", type: "uint64" },
        ],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "operator", internalType: "address", type: "address" },
        ],
        name: "isApprovedForAll",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "uri", internalType: "string", type: "string" }],
        name: "mint",
        outputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "name",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "ownerOf",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "approved", internalType: "bool", type: "bool" },
        ],
        name: "setApprovalForAll",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "uri", internalType: "string", type: "string" },
        ],
        name: "setTokenURI",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
        name: "supportsInterface",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "symbol",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "tokenURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFrom",
        outputs: [],
    },
];
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export const methodologiesAddress = {
    5: "0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F",
    137: "0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc",
};
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export const methodologiesConfig = {
    address: methodologiesAddress,
    abi: methodologiesABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Regenerators
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export const regeneratorsABI = [
    { type: "error", inputs: [], name: "BalanceMap__AddressNotFound" },
    { type: "error", inputs: [], name: "CAP721__InvalidURI" },
    { type: "error", inputs: [], name: "CAP721__MintLimit" },
    { type: "error", inputs: [], name: "ERC165Base__InvalidInterfaceId" },
    { type: "error", inputs: [], name: "ERC721Base__BalanceQueryZeroAddress" },
    {
        type: "error",
        inputs: [],
        name: "ERC721Base__ERC721ReceiverNotImplemented",
    },
    { type: "error", inputs: [], name: "ERC721Base__InvalidOwner" },
    { type: "error", inputs: [], name: "ERC721Base__MintToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Base__NonExistentToken" },
    { type: "error", inputs: [], name: "ERC721Base__NotOwnerOrApproved" },
    { type: "error", inputs: [], name: "ERC721Base__NotTokenOwner" },
    { type: "error", inputs: [], name: "ERC721Base__SelfApproval" },
    { type: "error", inputs: [], name: "ERC721Base__TokenAlreadyMinted" },
    { type: "error", inputs: [], name: "ERC721Base__TransferToZeroAddress" },
    { type: "error", inputs: [], name: "ERC721Metadata__NonExistentToken" },
    { type: "error", inputs: [], name: "Initializable__AlreadyInitialized" },
    { type: "error", inputs: [], name: "Values__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "Values__InsufficientValue" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Approval",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "owner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "approved", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "ApprovalForAll",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "MetadataUpdate",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "Transfer",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "value", internalType: "string", type: "string", indexed: false },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
        ],
        name: "URI",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "selector",
                internalType: "bytes4",
                type: "bytes4",
                indexed: true,
            },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "ValueSet",
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "approve",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "account", internalType: "address", type: "address" }],
        name: "balanceOf",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getApproved",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "idRange",
        outputs: [
            { name: "", internalType: "uint64", type: "uint64" },
            { name: "", internalType: "uint64", type: "uint64" },
        ],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "idOffset", internalType: "uint64", type: "uint64" },
            { name: "idLimit", internalType: "uint64", type: "uint64" },
        ],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "operator", internalType: "address", type: "address" },
        ],
        name: "isApprovedForAll",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "uri", internalType: "string", type: "string" }],
        name: "mint",
        outputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "name",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "ownerOf",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "approved", internalType: "bool", type: "bool" },
        ],
        name: "setApprovalForAll",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "uri", internalType: "string", type: "string" },
        ],
        name: "setTokenURI",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
        name: "supportsInterface",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "symbol",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "tokenURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFrom",
        outputs: [],
    },
];
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export const regeneratorsAddress = {
    5: "0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7",
    137: "0x590F3BDA0842294305e3ef77d9c276fBeb4c150E",
};
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export const regeneratorsConfig = {
    address: regeneratorsAddress,
    abi: regeneratorsABI,
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CAP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export const capABI = [
    { type: "error", inputs: [], name: "Accreditations__InvalidAttestation" },
    { type: "error", inputs: [], name: "Accreditations__InvalidClaim" },
    { type: "error", inputs: [], name: "Accreditations__InvalidCredit" },
    { type: "error", inputs: [], name: "Accreditations__InvalidDataHash" },
    { type: "error", inputs: [], name: "Accreditations__InvalidMethodology" },
    { type: "error", inputs: [], name: "Accreditations__InvalidSigner" },
    { type: "error", inputs: [], name: "AttestationLib__InvalidSigner" },
    { type: "error", inputs: [], name: "AttestationLib__InvalidTimestamps" },
    { type: "error", inputs: [], name: "AttestationLib__InvalidURI" },
    { type: "error", inputs: [], name: "Authorize__NotAuthorized" },
    { type: "error", inputs: [], name: "Authorize__NotTokenOwner" },
    { type: "error", inputs: [], name: "ERC1155Base__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "ERC1155Base__BalanceQueryZeroAddress" },
    { type: "error", inputs: [], name: "ERC1155Base__BurnExceedsBalance" },
    { type: "error", inputs: [], name: "ERC1155Base__BurnFromZeroAddress" },
    {
        type: "error",
        inputs: [],
        name: "ERC1155Base__ERC1155ReceiverNotImplemented",
    },
    { type: "error", inputs: [], name: "ERC1155Base__ERC1155ReceiverRejected" },
    { type: "error", inputs: [], name: "ERC1155Base__MintToZeroAddress" },
    { type: "error", inputs: [], name: "ERC1155Base__NotOwnerOrApproved" },
    {
        type: "error",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "ERC1155Base__NotTransferrable",
    },
    { type: "error", inputs: [], name: "ERC1155Base__SelfApproval" },
    { type: "error", inputs: [], name: "ERC1155Base__TransferExceedsBalance" },
    { type: "error", inputs: [], name: "ERC1155Base__TransferToZeroAddress" },
    { type: "error", inputs: [], name: "Signatures__InvalidNonce" },
    { type: "error", inputs: [], name: "Signatures__NotAuthorized" },
    { type: "error", inputs: [], name: "Values__ArrayLengthMismatch" },
    { type: "error", inputs: [], name: "Values__InsufficientValue" },
    { type: "error", inputs: [], name: "Claims__InvalidAttestation" },
    { type: "error", inputs: [], name: "Claims__InvalidDataHash" },
    { type: "error", inputs: [], name: "Claims__InvalidRegenerator" },
    { type: "error", inputs: [], name: "Claims__InvalidSigner" },
    { type: "error", inputs: [], name: "Auth__NotAuthorized" },
    { type: "error", inputs: [], name: "BalanceMap__AddressNotFound" },
    {
        type: "error",
        inputs: [],
        name: "LayerZeroClientBase__InvalidTrustedRemote",
    },
    {
        type: "error",
        inputs: [],
        name: "LayerZeroClientBase__NotLayerZeroEndpoint",
    },
    {
        type: "error",
        inputs: [],
        name: "LayerZeroClientReceiver__InvalidPayload",
    },
    { type: "error", inputs: [], name: "LayerZeroClientReceiver__NotSelf" },
    { type: "error", inputs: [], name: "Omnichain__EmptyBatch" },
    { type: "error", inputs: [], name: "Properties__InvalidDataHash" },
    { type: "error", inputs: [], name: "Properties__InvalidEntries" },
    { type: "error", inputs: [], name: "Properties__InvalidParams" },
    { type: "error", inputs: [], name: "Properties__InvalidSigner" },
    { type: "error", inputs: [], name: "PropertyMap__NonExistentID" },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InsufficientClaim",
    },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidAccreditation",
    },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidBurn",
    },
    {
        type: "error",
        inputs: [{ name: "claimID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidClaim",
    },
    {
        type: "error",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "TokenOps__InvalidCredit",
    },
    {
        type: "error",
        inputs: [],
        name: "ComponentInitializable__AlreadyInitialized",
    },
    { type: "error", inputs: [], name: "ERC165Base__InvalidInterfaceId" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "creditID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
            {
                name: "validFrom",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            {
                name: "validTo",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            { name: "value", internalType: "uint64", type: "uint64", indexed: false },
            { name: "uri", internalType: "string", type: "string", indexed: false },
        ],
        name: "Accredited",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "approved", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "ApprovalForAll",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "creditID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "RevokedAccreditation",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "ids",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
            {
                name: "values",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
        ],
        name: "TransferBatch",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "operator",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            { name: "id", internalType: "uint256", type: "uint256", indexed: false },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "TransferSingle",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "wordPos",
                internalType: "uint248",
                type: "uint248",
                indexed: true,
            },
            {
                name: "mask",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "UnorderedNonceInvalidation",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "selector",
                internalType: "bytes4",
                type: "bytes4",
                indexed: true,
            },
            {
                name: "value",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "ValueSet",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "claimID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
            {
                name: "validFrom",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            {
                name: "validTo",
                internalType: "uint32",
                type: "uint32",
                indexed: false,
            },
            { name: "value", internalType: "uint64", type: "uint64", indexed: false },
            { name: "uri", internalType: "string", type: "string", indexed: false },
        ],
        name: "Claimed",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "claimID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "RevokedClaim",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "user", internalType: "address", type: "address", indexed: true },
            {
                name: "newAuthority",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "AuthorityUpdated",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "sourceChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "path", internalType: "bytes", type: "bytes", indexed: false },
            { name: "nonce", internalType: "uint64", type: "uint64", indexed: false },
            { name: "data", internalType: "bytes", type: "bytes", indexed: false },
            { name: "reason", internalType: "bytes", type: "bytes", indexed: false },
        ],
        name: "MessageFailed",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "destinationChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "payload", internalType: "bytes", type: "bytes", indexed: false },
            {
                name: "refundAddress",
                internalType: "address",
                type: "address",
                indexed: false,
            },
            {
                name: "zroPaymentAddress",
                internalType: "address",
                type: "address",
                indexed: false,
            },
            {
                name: "adapterParams",
                internalType: "bytes",
                type: "bytes",
                indexed: false,
            },
            {
                name: "nativeFee",
                internalType: "uint256",
                type: "uint256",
                indexed: false,
            },
        ],
        name: "MessageSent",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "sourceChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "path", internalType: "bytes", type: "bytes", indexed: false },
            { name: "nonce", internalType: "uint64", type: "uint64", indexed: false },
            { name: "data", internalType: "bytes", type: "bytes", indexed: false },
        ],
        name: "MessageSucceeded",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "fromChainID",
                internalType: "uint16",
                type: "uint16",
                indexed: true,
            },
            { name: "from", internalType: "bytes", type: "bytes", indexed: true },
            { name: "to", internalType: "address", type: "address", indexed: true },
            {
                name: "ids",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
            {
                name: "amounts",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
        ],
        name: "ReceiveBatchFromChain",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "toChainID",
                internalType: "uint16",
                type: "uint16",
                indexed: true,
            },
            { name: "from", internalType: "address", type: "address", indexed: true },
            { name: "to", internalType: "bytes", type: "bytes", indexed: true },
            {
                name: "ids",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
            {
                name: "amounts",
                internalType: "uint256[]",
                type: "uint256[]",
                indexed: false,
            },
        ],
        name: "SendBatchToChain",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "remoteChainId",
                internalType: "uint16",
                type: "uint16",
                indexed: false,
            },
            { name: "path", internalType: "bytes", type: "bytes", indexed: false },
        ],
        name: "SetTrustedRemote",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "signer",
                internalType: "address",
                type: "address",
                indexed: false,
            },
            {
                name: "creditID",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
            {
                name: "keys",
                internalType: "bytes32[]",
                type: "bytes32[]",
                indexed: false,
            },
            {
                name: "values",
                internalType: "bytes32[]",
                type: "bytes32[]",
                indexed: false,
            },
        ],
        name: "SetProperties",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "RegisteredAccount",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
            {
                name: "auth",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "RegisteredMethodology",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "account",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            { name: "id", internalType: "uint256", type: "uint256", indexed: true },
            {
                name: "auth",
                internalType: "contract IAuthority",
                type: "address",
                indexed: true,
            },
        ],
        name: "RegisteredRegenerator",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "value", internalType: "string", type: "string", indexed: false },
            {
                name: "tokenId",
                internalType: "uint256",
                type: "uint256",
                indexed: true,
            },
        ],
        name: "URI",
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "ACCREDITATION_PARAMS_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "REVOKE_ACCREDITATION_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.AccreditationParams",
                type: "tuple",
                components: [
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                    { name: "methodologyID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "accredit",
        outputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.AccreditationParams",
                type: "tuple",
                components: [
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                    { name: "methodologyID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "accreditWithSignature",
        outputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getAccreditation",
        outputs: [
            {
                name: "",
                internalType: "struct AttestationLib.Value",
                type: "tuple",
                components: [
                    { name: "value", internalType: "uint64", type: "uint64" },
                    { name: "validFrom", internalType: "uint32", type: "uint32" },
                    { name: "validTo", internalType: "uint32", type: "uint32" },
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "uri", internalType: "string", type: "string" },
                ],
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getAccreditationURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "timestamp", internalType: "uint32", type: "uint32" },
        ],
        name: "getAccreditationValue",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.AccreditationParams",
                type: "tuple",
                components: [
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                    { name: "methodologyID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "hashAccreditation",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.RevokeAccreditationParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "hashRevokeAccreditation",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isRevokedAccreditation",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isValidAccreditation",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.RevokeAccreditationParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "revokeAccreditation",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Accreditations.RevokeAccreditationParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "revokeAccreditationWithSignature",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "CLAIM_PARAMS_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "REVOKE_CLAIM_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.ClaimParams",
                type: "tuple",
                components: [
                    { name: "regeneratorID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "claim",
        outputs: [{ name: "claimID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.ClaimParams",
                type: "tuple",
                components: [
                    { name: "regeneratorID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "claimWithSignature",
        outputs: [{ name: "claimID", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getClaim",
        outputs: [
            {
                name: "",
                internalType: "struct AttestationLib.Value",
                type: "tuple",
                components: [
                    { name: "value", internalType: "uint64", type: "uint64" },
                    { name: "validFrom", internalType: "uint32", type: "uint32" },
                    { name: "validTo", internalType: "uint32", type: "uint32" },
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "uri", internalType: "string", type: "string" },
                ],
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getClaimURI",
        outputs: [{ name: "", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "timestamp", internalType: "uint32", type: "uint32" },
        ],
        name: "getClaimValue",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.ClaimParams",
                type: "tuple",
                components: [
                    { name: "regeneratorID", internalType: "uint256", type: "uint256" },
                    {
                        name: "attestation",
                        internalType: "struct AttestationLib.Value",
                        type: "tuple",
                        components: [
                            { name: "value", internalType: "uint64", type: "uint64" },
                            { name: "validFrom", internalType: "uint32", type: "uint32" },
                            { name: "validTo", internalType: "uint32", type: "uint32" },
                            { name: "signer", internalType: "address", type: "address" },
                            { name: "uri", internalType: "string", type: "string" },
                        ],
                    },
                ],
            },
        ],
        name: "hashClaim",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.RevokeClaimParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "hashRevokeClaim",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isRevokedClaim",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isValidClaim",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.RevokeClaimParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                ],
            },
        ],
        name: "revokeClaim",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Claims.RevokeClaimParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "claimID", internalType: "uint256", type: "uint256" },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "revokeClaimWithSignature",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
            { name: "amounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "useZro", internalType: "bool", type: "bool" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "estimateSendBatchFee",
        outputs: [
            { name: "nativeFee", internalType: "uint256", type: "uint256" },
            { name: "zroFee", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
            { name: "useZro", internalType: "bool", type: "bool" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "estimateSendFee",
        outputs: [
            { name: "nativeFee", internalType: "uint256", type: "uint256" },
            { name: "zroFee", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "sourceChainId", internalType: "uint16", type: "uint16" },
            { name: "path", internalType: "bytes", type: "bytes" },
            { name: "nonce", internalType: "uint64", type: "uint64" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "retryMessage",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
            { name: "amounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "", internalType: "address payable", type: "address" },
            { name: "zroPayer", internalType: "address", type: "address" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "sendBatchFrom",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "toChainID", internalType: "uint16", type: "uint16" },
            { name: "to", internalType: "bytes", type: "bytes" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
            { name: "", internalType: "address payable", type: "address" },
            { name: "zroPayer", internalType: "address", type: "address" },
            { name: "adapterParams", internalType: "bytes", type: "bytes" },
        ],
        name: "sendFrom",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "SET_PROPERTIES_PARAMS_TYPEHASH",
        outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "getProperties",
        outputs: [
            {
                name: "",
                internalType: "struct PropertyMap.Entry[]",
                type: "tuple[]",
                components: [
                    { name: "key", internalType: "bytes32", type: "bytes32" },
                    { name: "value", internalType: "bytes32", type: "bytes32" },
                ],
            },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
            { name: "expectedValues", internalType: "bytes32[]", type: "bytes32[]" },
        ],
        name: "hasProperties",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Properties.SetPropertiesParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                    { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
                    { name: "values", internalType: "bytes32[]", type: "bytes32[]" },
                ],
            },
        ],
        name: "hashSetProperties",
        outputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Properties.SetPropertiesParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                    { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
                    { name: "values", internalType: "bytes32[]", type: "bytes32[]" },
                ],
            },
        ],
        name: "setProperties",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct Properties.SetPropertiesParams",
                type: "tuple",
                components: [
                    { name: "signer", internalType: "address", type: "address" },
                    { name: "creditID", internalType: "uint256", type: "uint256" },
                    { name: "keys", internalType: "bytes32[]", type: "bytes32[]" },
                    { name: "values", internalType: "bytes32[]", type: "bytes32[]" },
                ],
            },
            { name: "dataHash", internalType: "bytes32", type: "bytes32" },
            { name: "signature", internalType: "bytes", type: "bytes" },
        ],
        name: "setPropertiesWithSignature",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [],
        name: "registerAccount",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "auth", internalType: "contract IAuthority", type: "address" },
        ],
        name: "registerMethodology",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "auth", internalType: "contract IAuthority", type: "address" },
        ],
        name: "registerRegenerator",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "eip712Domain",
        outputs: [
            { name: "fields", internalType: "bytes1", type: "bytes1" },
            { name: "name", internalType: "string", type: "string" },
            { name: "version", internalType: "string", type: "string" },
            { name: "chainId", internalType: "uint256", type: "uint256" },
            { name: "verifyingContract", internalType: "address", type: "address" },
            { name: "salt", internalType: "bytes32", type: "bytes32" },
            { name: "extensions", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "dataHash", internalType: "bytes32", type: "bytes32" }],
        name: "invalidateDataHash",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "nonce", internalType: "uint256", type: "uint256" },
        ],
        name: "invalidateNonce",
        outputs: [],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "wordPos", internalType: "uint248", type: "uint248" },
            { name: "mask", internalType: "uint256", type: "uint256" },
        ],
        name: "invalidateUnorderedNonces",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "nonce", internalType: "uint256", type: "uint256" },
        ],
        name: "isValidNonce",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "creditID", internalType: "uint256", type: "uint256" }],
        name: "isRedeemable",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "mint",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "claimCounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "mintBatch",
        outputs: [
            { name: "claimIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "creditCounts", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
        ],
        name: "previewMint",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
            { name: "value", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
        ],
        name: "previewReclaim",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
            { name: "value", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "creditCount", internalType: "uint256", type: "uint256" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "reclaim",
        outputs: [
            { name: "claimID", internalType: "uint256", type: "uint256" },
            { name: "claimCount", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "creditCounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "reclaimBatch",
        outputs: [
            { name: "claimIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "claimCounts", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditID", internalType: "uint256", type: "uint256" },
            { name: "creditAmount", internalType: "uint256", type: "uint256" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "redeem",
        outputs: [
            { name: "certificateID", internalType: "uint256", type: "uint256" },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [
            { name: "creditIDs", internalType: "uint256[]", type: "uint256[]" },
            { name: "creditAmounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "receiver", internalType: "address", type: "address" },
        ],
        name: "redeemBatch",
        outputs: [
            { name: "certificateIDs", internalType: "uint256[]", type: "uint256[]" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
        ],
        name: "balanceOf",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "accounts", internalType: "address[]", type: "address[]" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
        ],
        name: "balanceOfBatch",
        outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "balancesOf",
        outputs: [
            {
                name: "",
                internalType: "struct BalanceMap.Entry[]",
                type: "tuple[]",
                components: [
                    { name: "key", internalType: "address", type: "address" },
                    { name: "value", internalType: "uint64", type: "uint64" },
                ],
            },
        ],
    },
    {
        stateMutability: "payable",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "emitURI",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "account", internalType: "address", type: "address" },
            { name: "operator", internalType: "address", type: "address" },
        ],
        name: "isApprovedForAll",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "isTransferrable",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "ids", internalType: "uint256[]", type: "uint256[]" },
            { name: "amounts", internalType: "uint256[]", type: "uint256[]" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeBatchTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "id", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
            { name: "data", internalType: "bytes", type: "bytes" },
        ],
        name: "safeTransferFrom",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "operator", internalType: "address", type: "address" },
            { name: "status", internalType: "bool", type: "bool" },
        ],
        name: "setApprovalForAll",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "totalSupply",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "pure",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "typeOf",
        outputs: [
            { name: "t", internalType: "enum Tokens.TokenType", type: "uint8" },
        ],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "id", internalType: "uint256", type: "uint256" }],
        name: "uri",
        outputs: [{ name: "metadataURI", internalType: "string", type: "string" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "data", internalType: "bytes[]", type: "bytes[]" }],
        name: "multicall",
        outputs: [{ name: "", internalType: "bytes[]", type: "bytes[]" }],
    },
];
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export const capAddress = {
    5: "0x121A0360977C193b02a20d0624bFD3bFf3a754F5",
    137: "0xa9476E236f41EF00aF338ED06984ccB41F04Ef36",
};
/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export const capConfig = { address: capAddress, abi: capABI };
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function useAclAuthority(config = {}) {
    return useContract({ abi: aclAuthorityABI, ...config });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"canCall"`.
 */
export function useAclAuthorityCanCall(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "canCall",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"doesRoleHaveCapability"`.
 */
export function useAclAuthorityDoesRoleHaveCapability(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "doesRoleHaveCapability",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"doesUserHaveRole"`.
 */
export function useAclAuthorityDoesUserHaveRole(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "doesUserHaveRole",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"getFunctionRoles"`.
 */
export function useAclAuthorityGetFunctionRoles(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "getFunctionRoles",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"getTargetAuthority"`.
 */
export function useAclAuthorityGetTargetAuthority(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "getTargetAuthority",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"getUserRoles"`.
 */
export function useAclAuthorityGetUserRoles(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "getUserRoles",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"isPublicCapability"`.
 */
export function useAclAuthorityIsPublicCapability(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "isPublicCapability",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"nomineeOwner"`.
 */
export function useAclAuthorityNomineeOwner(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "nomineeOwner",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"owner"`.
 */
export function useAclAuthorityOwner(config = {}) {
    return useContractRead({
        abi: aclAuthorityABI,
        functionName: "owner",
        ...config,
    });
}
/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function useAclAuthorityWrite(config = {}) {
    return useContractWrite({
        abi: aclAuthorityABI,
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"acceptOwnership"`.
 */
export function usePrepareAclAuthorityAcceptOwnership(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "acceptOwnership",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareAclAuthorityInitialize(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "initialize",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"multicall"`.
 */
export function usePrepareAclAuthorityMulticall(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "multicall",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"setOwner"`.
 */
export function usePrepareAclAuthoritySetOwner(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "setOwner",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"setPublicCapability"`.
 */
export function usePrepareAclAuthoritySetPublicCapability(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "setPublicCapability",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"setRoleCapability"`.
 */
export function usePrepareAclAuthoritySetRoleCapability(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "setRoleCapability",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"setTargetAuthority"`.
 */
export function usePrepareAclAuthoritySetTargetAuthority(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "setTargetAuthority",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"setUserRole"`.
 */
export function usePrepareAclAuthoritySetUserRole(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "setUserRole",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link aclAuthorityABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePrepareAclAuthorityTransferOwnership(config = {}) {
    return usePrepareContractWrite({
        abi: aclAuthorityABI,
        functionName: "transferOwnership",
        ...config,
    });
}
/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link aclAuthorityABI}__.
 */
export function useAclAuthorityEvent(config = {}) {
    return useContractEvent({
        abi: aclAuthorityABI,
        ...config,
    });
}
/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function useIFactory(config = {}) {
    return useContract({ abi: iFactoryABI, ...config });
}
/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function useIFactoryWrite(config = {}) {
    return useContractWrite({
        abi: iFactoryABI,
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iFactoryABI}__ and `functionName` set to `"deploy"`.
 */
export function usePrepareIFactoryDeploy(config = {}) {
    return usePrepareContractWrite({
        abi: iFactoryABI,
        functionName: "deploy",
        ...config,
    });
}
/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iFactoryABI}__.
 */
export function useIFactoryEvent(config = {}) {
    return useContractEvent({
        abi: iFactoryABI,
        ...config,
    });
}
/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologies(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContract({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesBalanceOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "balanceOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"getApproved"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesGetApproved(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "getApproved",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"idRange"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesIdRange(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "idRange",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesIsApprovedForAll(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "isApprovedForAll",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"name"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesName(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "name",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"ownerOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesOwnerOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "ownerOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesSupportsInterface(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "supportsInterface",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"symbol"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesSymbol(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "symbol",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"tokenURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesTokenUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "tokenURI",
        ...config,
    });
}
/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesWrite(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesApprove(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "approve",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"initialize"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesInitialize(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "initialize",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesMint(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "mint",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesSafeTransferFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "safeTransferFrom",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesSetApprovalForAll(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "setApprovalForAll",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"setTokenURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesSetTokenUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "setTokenURI",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link methodologiesABI}__ and `functionName` set to `"transferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function usePrepareMethodologiesTransferFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        functionName: "transferFrom",
        ...config,
    });
}
/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link methodologiesABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xB110BEf51bdEd721Bae4cF23fDEec31d7165e88F)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xbc1Fde5aA74AeC148b712C294c06dcF20AAba9Bc)
 */
export function useMethodologiesEvent(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractEvent({
        abi: methodologiesABI,
        address: methodologiesAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegenerators(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContract({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsBalanceOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "balanceOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"getApproved"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsGetApproved(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "getApproved",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"idRange"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsIdRange(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "idRange",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsIsApprovedForAll(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "isApprovedForAll",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"name"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsName(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "name",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"ownerOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsOwnerOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "ownerOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsSupportsInterface(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "supportsInterface",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"symbol"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsSymbol(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "symbol",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"tokenURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsTokenUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "tokenURI",
        ...config,
    });
}
/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsWrite(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsApprove(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "approve",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"initialize"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsInitialize(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "initialize",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsMint(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "mint",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsSafeTransferFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "safeTransferFrom",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsSetApprovalForAll(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "setApprovalForAll",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"setTokenURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsSetTokenUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "setTokenURI",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link regeneratorsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function usePrepareRegeneratorsTransferFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        functionName: "transferFrom",
        ...config,
    });
}
/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link regeneratorsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xdF922B4FC403e3A7e770Bb439C7A47FEcF9DacB7)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0x590F3BDA0842294305e3ef77d9c276fBeb4c150E)
 */
export function useRegeneratorsEvent(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractEvent({
        abi: regeneratorsABI,
        address: regeneratorsAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCap(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContract({
        abi: capABI,
        address: capAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"ACCREDITATION_PARAMS_TYPEHASH"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapAccreditationParamsTypehash(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "ACCREDITATION_PARAMS_TYPEHASH",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"REVOKE_ACCREDITATION_TYPEHASH"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapRevokeAccreditationTypehash(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "REVOKE_ACCREDITATION_TYPEHASH",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getAccreditation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetAccreditation(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getAccreditation",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getAccreditationURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetAccreditationUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getAccreditationURI",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getAccreditationValue"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetAccreditationValue(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getAccreditationValue",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"hashAccreditation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapHashAccreditation(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "hashAccreditation",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"hashRevokeAccreditation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapHashRevokeAccreditation(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "hashRevokeAccreditation",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isRevokedAccreditation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsRevokedAccreditation(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isRevokedAccreditation",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isValidAccreditation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsValidAccreditation(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isValidAccreditation",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"CLAIM_PARAMS_TYPEHASH"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapClaimParamsTypehash(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "CLAIM_PARAMS_TYPEHASH",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"REVOKE_CLAIM_TYPEHASH"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapRevokeClaimTypehash(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "REVOKE_CLAIM_TYPEHASH",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getClaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getClaim",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getClaimURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetClaimUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getClaimURI",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getClaimValue"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetClaimValue(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getClaimValue",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"hashClaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapHashClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "hashClaim",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"hashRevokeClaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapHashRevokeClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "hashRevokeClaim",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isRevokedClaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsRevokedClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isRevokedClaim",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isValidClaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsValidClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isValidClaim",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"estimateSendBatchFee"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapEstimateSendBatchFee(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "estimateSendBatchFee",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"estimateSendFee"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapEstimateSendFee(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "estimateSendFee",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"SET_PROPERTIES_PARAMS_TYPEHASH"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapSetPropertiesParamsTypehash(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "SET_PROPERTIES_PARAMS_TYPEHASH",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"getProperties"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapGetProperties(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "getProperties",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"hasProperties"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapHasProperties(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "hasProperties",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"hashSetProperties"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapHashSetProperties(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "hashSetProperties",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"eip712Domain"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapEip712Domain(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "eip712Domain",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isValidNonce"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsValidNonce(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isValidNonce",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isRedeemable"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsRedeemable(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isRedeemable",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"previewMint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapPreviewMint(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "previewMint",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"previewReclaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapPreviewReclaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "previewReclaim",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapBalanceOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "balanceOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"balanceOfBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapBalanceOfBatch(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "balanceOfBatch",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"balancesOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapBalancesOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "balancesOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsApprovedForAll(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isApprovedForAll",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"isTransferrable"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapIsTransferrable(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "isTransferrable",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"totalSupply"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapTotalSupply(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "totalSupply",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"typeOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapTypeOf(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "typeOf",
        ...config,
    });
}
/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"uri"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractRead({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "uri",
        ...config,
    });
}
/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapWrite(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"accredit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapAccredit(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "accredit",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"accreditWithSignature"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapAccreditWithSignature(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "accreditWithSignature",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"revokeAccreditation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRevokeAccreditation(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "revokeAccreditation",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"revokeAccreditationWithSignature"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRevokeAccreditationWithSignature(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "revokeAccreditationWithSignature",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"claim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "claim",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"claimWithSignature"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapClaimWithSignature(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "claimWithSignature",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"revokeClaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRevokeClaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "revokeClaim",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"revokeClaimWithSignature"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRevokeClaimWithSignature(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "revokeClaimWithSignature",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"retryMessage"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRetryMessage(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "retryMessage",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"sendBatchFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSendBatchFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "sendBatchFrom",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"sendFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSendFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "sendFrom",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"setProperties"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSetProperties(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "setProperties",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"setPropertiesWithSignature"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSetPropertiesWithSignature(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "setPropertiesWithSignature",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"registerAccount"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRegisterAccount(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "registerAccount",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"registerMethodology"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRegisterMethodology(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "registerMethodology",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"registerRegenerator"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRegisterRegenerator(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "registerRegenerator",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"invalidateDataHash"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapInvalidateDataHash(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "invalidateDataHash",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"invalidateNonce"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapInvalidateNonce(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "invalidateNonce",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"invalidateUnorderedNonces"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapInvalidateUnorderedNonces(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "invalidateUnorderedNonces",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapMint(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "mint",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"mintBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapMintBatch(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "mintBatch",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"reclaim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapReclaim(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "reclaim",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"reclaimBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapReclaimBatch(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "reclaimBatch",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"redeem"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRedeem(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "redeem",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"redeemBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapRedeemBatch(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "redeemBatch",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"emitURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapEmitUri(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "emitURI",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSafeBatchTransferFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "safeBatchTransferFrom",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSafeTransferFrom(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "safeTransferFrom",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapSetApprovalForAll(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "setApprovalForAll",
        ...config,
    });
}
/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link capABI}__ and `functionName` set to `"multicall"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function usePrepareCapMulticall(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return usePrepareContractWrite({
        abi: capABI,
        address: capAddress[chainId],
        functionName: "multicall",
        ...config,
    });
}
/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link capABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x121A0360977C193b02a20d0624bFD3bFf3a754F5)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xa9476E236f41EF00aF338ED06984ccB41F04Ef36)
 */
export function useCapEvent(config = {}) {
    const { chain } = useNetwork();
    const chainId = config.chainId ?? chain?.id;
    return useContractEvent({
        abi: capABI,
        address: capAddress[chainId],
        ...config,
    });
}
//# sourceMappingURL=data:application/json;base64,